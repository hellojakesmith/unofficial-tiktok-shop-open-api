openapi: 3.0.3
info:
  title: TikTok Shop API Integration
  description: OpenAPI specification for TikTok Shop API including authorization, token management, shop and product management, and order processing.
  version: 1.0.1
  contact:
    name: API Support
    url: 'https://www.tiktok.com/support'
    email: api-support@tiktok.com
servers:
  - url: 'https://services.tiktokshop.com'
    description: Base URL for non-US services
  - url: 'https://services.us.tiktokshop.com'
    description: Base URL for US services
  - url: 'https://auth.tiktok-shops.com'
    description: Authentication server for token operations
  - url: 'https://open-api.tiktokglobalshop.com'
    description: Global API server for shop and product operations
paths:
  /api/v2/token/get:
    get:
      summary: Get Access Token
      tags: 
        - Authorization
      servers:  # Specific server for this operation
        - url: 'https://auth.tiktok-shops.com'
          description: Authentication server for token operations.
      parameters:
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/appSecret'
        - in: query
          name: auth_code
          schema:
            type: string
          required: true
        - in: query
          name: grant_type
          schema:
            type: string
          required: true
          example: 'authorized_code'
      responses:
        '200':
          description: Access token details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /api/v2/token/refresh:
    get:
      summary: Refresh Access Token
      tags: 
        - Authorization
      description: Refreshes the access token using a refresh token.
      parameters:
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/appSecret'
        - in: query
          name: refresh_token
          schema:
            type: string
          required: true
        - in: query
          name: grant_type
          schema:
            type: string
          required: true
          example: 'refresh_token'
      responses:
        '200':
          description: New access token details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /authorization/202309/shops:
    get:
      summary: Get Authorized Shops
      tags: 
        - Authorization
      description: Retrieves a list of shops authorized by the developer for API access.
      parameters:
        - in: query
          name: app_key
          schema:
            type: string
          required: true
        - in: query
          name: access_token
          schema:
            type: string
          required: true
        - in: query
          name: timestamp
          schema:
            type: string
          required: true
        - in: query
          name: sign
          schema:
            type: string
          required: true
        - in: header
          name: x-tts-access-token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: A list of authorized shops.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedShopsResponse'
  /event/202309/webhooks:
    get:
      summary: Get Shop Webhooks
      tags: 
        - Event
      description: This API retrieves the shop's webhooks callback URL for all event types.
      parameters:
          - $ref: '#/components/parameters/shopCipher'
          - $ref: '#/components/parameters/appKey'
          - $ref: '#/components/parameters/accessToken'
          - $ref: '#/components/parameters/timestamp'
          - $ref: '#/components/parameters/sign'
          - $ref: '#/components/parameters/xTtsAccessToken'
          - $ref: '#/components/parameters/contentTypeApplicationJson'
      responses:
        '200':
          description: Successful response with the details of the webhooks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Shop Webhooks
      tags: 
        - Event
      description: This API updates the shop's webhook callback URL for a specific event type.
      parameters:
          - $ref: '#/components/parameters/shopCipher'
          - $ref: '#/components/parameters/appKey'
          - $ref: '#/components/parameters/accessToken'
          - $ref: '#/components/parameters/timestamp'
          - $ref: '#/components/parameters/sign'
          - $ref: '#/components/parameters/xTtsAccessToken'
          - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: The webhook URL used to receive HTTP requests of the specified event type. Maximum character limit is 255.
                  example: "https://partner.tiktokshop.com"
                event_type:
                  type: string
                  description: The event type of the webhook.
                  enum:
                    - ORDER_STATUS_CHANGE
                    - CANCELLATION_STATUS_CHANGE
                    - RETURN_STATUS_CHANGE
                    - RECIPIENT_ADDRESS_UPDATE
                    - PACKAGE_UPDATE
                    - PRODUCT_STATUS_CHANGE
                    - SELLER_DEAUTHORIZATION
                    - UPCOMING_AUTHORIZATION_EXPIRATION
                    - PRODUCT_INFORMATION_CHANGE
      responses:
        '200':
          description: Successful update of the webhook.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWebhookResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Shop Webhook
      tags:
        - Event
      description: Deletes the shop's webhook URL for a specific event type. Regardless of the webhook configuration, the result will return success.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: event_type
          required: true
          schema:
            type: string
            enum:
            - ORDER_STATUS_CHANGE
            - CANCELLATION_STATUS_CHANGE
            - RETURN_STATUS_CHANGE
            - RECIPIENT_ADDRESS_UPDATE
            - PACKAGE_UPDATE
            - PRODUCT_STATUS_CHANGE
            - SELLER_DEAUTHORIZATION
            - UPCOMING_AUTHORIZATION_EXPIRATION
            - PRODUCT_INFORMATION_CHANGE
          description: The event type of the webhook to delete.
      responses:
        '200':
          description: Successful deletion of the webhook.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWebhookResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /seller/202309/permissions:
    get:
      summary: Get Seller Permissions
      tags:
        - Seller
      description: >
        This API only applies to cross-border sellers. It returns the cross-border operations that the seller has permission to perform. Currently,
        the only applicable cross-border operation is global product management. Global products refer to a special type of product that a
        cross-border seller manages centrally, and are listed in multiple TikTok Shops in multiple country markets owned by the cross-border seller.
      parameters:
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      responses:
        '200':
          description: Successful retrieval of seller permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerPermissionsResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /seller/202309/shops:
    get:
      summary: Get Active Shops
      tags:
        - Seller
      description: >
        Returns all the shops associated with the seller with an Active status.
        Please note: Only cross-border sellers have multiple shops. Local sellers have only one shop.
      parameters:
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      responses:
        '200':
          description: Successful retrieval of active shops.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveShopsResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/202309/brands:
    get:
      summary: Get Brands
      tags: 
        - Product
      description: Retrieves all product brands including both platform's built-in and custom brands by sellers.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: category_id
          schema:
            type: string
          required: false
        - in: query
          name: is_authorized
          schema:
            type: boolean
          required: false
        - in: query
          name: brand_name
          schema:
            type: string
          required: false
        - in: query
          name: page_size
          schema:
            type: integer
          required: true
        - in: query
          name: page_token
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Brand details based on the query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandsResponse'
    post:
      summary: Create Custom Brands
      tags: 
        - Product
      description: >
        Sellers can use this API to create custom brands exclusively for their own use. This API can be used to create brands for all markets. 
        Authorization is not required when creating a brand. You can create the brand first and then apply for authorization.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: >
                    Brand name to be created. Prerequisites:
                    - The brand name should have a minimum of 2 characters and should not exceed 30 characters.
                    - There are no language restrictions for the brand, but Chinese characters cannot be used. The brand name will not be translated into multiple languages.
                    - Authorization is not required when creating a brand. You can create the brand first and then apply for authorization.
                  example: "Teas"
      responses:
        '200':
          description: Successful creation of the brand.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBrandResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/202309/categories:
    get:
      summary: Get Categories
      description: >
        Use this API to get a list of product categories. Note: Product categories change frequently. It is recommended not to cache data locally. Please call the API in real time to obtain the latest category data. When using outdated category data to create products, the API will return an error. In order to create products for invite-only categories, sellers need to contact account managers and apply for these categories.
      tags:
        - Product
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: locale
          schema:
            type: string
          required: false
          description: >
            Category information will be returned in the corresponding language based on the specified locale. If no locale is provided, the default locale of the store will be used. The currently supported locales include en-GB, en-US, id-ID, ms-MY, th-TH, vi-VN, zh-CN.
      responses:
        '200':
          description: Successful retrieval of categories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/202309/categories/{category_id}/rules:
    get:
      summary: Get Category Rules
      description: >
        After confirming the product's category, obtain category rule information through this interface, including size chart, product qualifications,
        and COD (Cash on Delivery) rules. Note that only leaf category IDs are supported for obtaining category rules.
      tags:
        - Product
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'

        - in: path
          name: category_id
          required: true
          schema:
            type: string
          description: The category must be a Leaf Category, which is the lowest level of category.
      responses:
        '200':
          description: Successful retrieval of category rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryRulesResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/202309/categories/{category_id}/attributes:
      get:
        summary: Get Attributes
        description: >
          Input a category to get the required product attributes and sales attributes required to list the product. Specify the language using the locale parameter. This API returns required attributes based on the shop's location. Only leaf category IDs are supported.
        tags:
          - Product
        parameters:
          - $ref: '#/components/parameters/shopCipher'
          - $ref: '#/components/parameters/appKey'
          - $ref: '#/components/parameters/accessToken'
          - $ref: '#/components/parameters/timestamp'
          - $ref: '#/components/parameters/sign'
          - $ref: '#/components/parameters/xTtsAccessToken'
          - $ref: '#/components/parameters/contentTypeApplicationJson'
          - in: path
            name: category_id
            required: true
            schema:
              type: string
              example: '600001' # Example leaf category ID.
            description: The category must be a Leaf Category, which is the lowest level of category.
          - in: query
            name: locale
            schema:
              type: string
              example: 'en-US' # Example locale.
            required: false
            description: >
              Category information is returned in the language specified by the locale. If no locale is provided, the store's default locale is used.
        responses:
          '200':
            description: Successful retrieval of category attributes.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AttributesResponse'
                  example: # Providing a response example.
                    code: 0
                    message: "Success"
                    request_id: "202203070749000101890810281E8C70B7"
                    data:
                      attributes:
                        - id: "100392"
                          is_customizable: true
                          is_multiple_selection: true
                          is_required: false
                          name: "Occasion"
                          type: "PRODUCT_PROPERTY"
                          values:
                            - id: "1001533"
                              name: "Birthday"
          default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
                  example: # Adding an error example.
                    code: 12052023
                    message: "Category does not exist"
                    request_id: "202203070749000101890810281E8C70B8"  
  /product/202309/categories/recommend:
    post:
      summary: Recommend Category
      tags:
        - Product
      description: >
        Recommends the Category for each product, based on product title, description, main images, and SKU images. This is especially useful for sellers syncing their product catalog from an external OMS system into TTS. The platform returns the recommended category to help speed up product catalog syncs.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_title:
                  type: string
                  example: "Men's Fashion Sports Low Cut Cotton Breathable Ankle Short"
                description:
                  type: string
                  example: "<p>Please compare above detailed size with your measurement before purchase.</p><ul><li>M-Size</li><li>XL-Size</li></ul><img src='https://example.com/image.jpg' width='100' height='100' />"
                images:
                  type: array
                  items:
                    $ref: '#/components/schemas/ImageUri'
      responses:
        '200':
          description: Recommended category based on product details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendCategoryResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /product/202309/images/upload:
    post:
      summary: Upload Product Image
      tags:
        - Product
      description: >
        Uploads local images to TikTok Shop for creating product main images, SKU images, size charts, qualification images, etc. Usage requirements include JPEG, PNG, or JPG formats and image size not exceeding 5MB.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeMultipartFormData'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: binary
                  description: "Image file data to be uploaded. Supports JPG, JPEG, PNG formats with a maximum size of 5MB."
                use_case:
                  type: string
                  description: "Specifies the usage scenario of the image, affecting processing. Options include MAIN_IMAGE, ATTRIBUTE_IMAGE, DESCRIPTION_IMAGE, CERTIFICATION_IMAGE, SIZE_CHART_IMAGE."
                  example: "MAIN_IMAGE"
      responses:
        '200':
          description: Successful image upload with URI and URL details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadImageResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/202309/files/upload:
    post:
      summary: Upload Product File
      tags:
        - Product
      description: >
        Allows uploading of videos and product certification files to TikTok Shop. Supports video in MP4 format and product certification in PDF format, with file size not exceeding 10MB. Follow best practices for file naming to ensure successful upload.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: binary
                  description: "Video or PDF file data to be uploaded. Supports PDF and MP4 formats, with a maximum size of 10MB."
                name:
                  type: string
                  description: "Name of the uploaded file, including the file extension (e.g., .pdf or .mp4)."
                  example: "SNI.pdf"
      responses:
        '200':
          description: Successful file upload with ID and URL details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/202309/products:
    post:
      summary: Create Product
      tags:
        - Product
      operationId: createProduct
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      description: >
        Create Product API is used to list products for local shops. If you need to manage product listings for cross-border shops, use Create Global Product API. The process of creating a product is as follows, and you can refer to the guide document for more detailed instructions. Note: In order to create products for invite-only categories, sellers need to contact account managers and apply for these categories. Know more about UK invite-only categories and US invite-only categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductResponse' 
  /product/202309/products/{product_id}/partial_edit:
    post:
      summary: Partial Edit Product
      operationId: partialEditProduct
      tags:
        - Product
      description: >
        This interface can be used to partially modify product information. It allows Local to Local sellers to edit some part of fields of product information. If first level fields are not filled in, it implies no edit for them. Fields filled in means to update by content filled in.
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product that needs to be partially edited.
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialEditProductRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialEditProductResponse'
  /product/202309/products/{product_id}:
      post:
        summary: Edit Product Information
        description: >
          Use this API to edit product information such as product description. Note that this API is for editing all product attributes at once; if the request payload contains a blank response, it will override the existing fields. To edit specific properties such as inventory level or price, use Update Inventory or Update Price.
        tags:
          - Product
        operationId: editProduct
        parameters:
          - name: product_id
            in: path
            required: true
            schema:
              type: string
            description: The ID of the product that needs to be partially edited.
          - $ref: '#/components/parameters/shopCipher'
          - $ref: '#/components/parameters/appKey'
          - $ref: '#/components/parameters/accessToken'
          - $ref: '#/components/parameters/timestamp'
          - $ref: '#/components/parameters/sign'
          - $ref: '#/components/parameters/xTtsAccessToken'
          - $ref: '#/components/parameters/contentTypeApplicationJson'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialEditProductRequest'
        responses:
          '200':
            description: Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PartialEditProductResponse'
      get:
        summary: Get Product
        tags:
          - Product
        description: >
          Use Get Product API to retrieve product information. You can obtain products in draft, under review, and activated status. After submitting a product for review, a snapshot of the product in the pending review state will be saved. This snapshot contains the information of the product that is under review and not yet published. If you want to retrieve information for products under review, you can set the 'return_under_review_version' parameter to true.
        parameters:
          - $ref: '#/components/parameters/shopCipher'
          - $ref: '#/components/parameters/appKey'
          - $ref: '#/components/parameters/accessToken'
          - $ref: '#/components/parameters/timestamp'
          - $ref: '#/components/parameters/sign'
          - $ref: '#/components/parameters/xTtsAccessToken'
          - $ref: '#/components/parameters/contentTypeApplicationJson'
          - name: product_id
            in: path
            required: true
            schema:
              type: string
            description: The unique ID of the product.
          - name: return_under_review_version
            in: query
            required: false
            schema:
              type: boolean
            description: >
              The "return_under_review_version" parameter can be used to retrieve the snapshot information of products that are under review. 
              - If set to false, it will retrieve information of products already approved and in the "activated" state. 
              - If set to true, it retrieves information of products still under review. 
              - Defaults to false if not provided.
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProductResponse'               
  /product/202309/products/{product_id}/inventory/update:
    post:
      summary: Update Inventory
      tags:
        - Product
      description: |
        Sellers can use this API to update product inventory. It represents the inventory value corresponding to the warehouse for which a SKU is set.
        **Usage requirements**
        - Products need to be in living status.
        - The user must have permission to activate an inventory item.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: product_id
          required: true
          schema:
            type: string
          description: The product id need update inventory.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skus:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - inventory
                    properties:
                      id:
                        type: string
                        description: Need to modify the SKU corresponding to the inventory.
                      inventory:
                        type: array
                        items:
                          type: object
                          properties:
                            warehouse_id:
                              type: string
                              description: |
                                Need to modify the warehouse corresponding to the inventory.
                                **Parameter Rules:**
                                - If the SKU is using one default warehouse information, then this warehouse id is an optional field.
                                - If the SKU is using another warehouse or the SKU has multiple warehouse information, then this warehouse id and inventory information are mandatory when you update inventory to a certain warehouse.
                            quantity:
                              type: integer
                              description: |
                                The quantity of named inventory after the change.
                                **Parameter Rules:**
                                - The value should be non-negative numbers (include number 0) and less than 99999.
      responses:
        '200':
          description: Inventory update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                  data:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                            message:
                              type: string
                            detail:
                              type: object
                              properties:
                                sku_id:
                                  type: string
                                extra_errors:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      warehouse_id:
                                        type: string
                                      code:
                                        type: integer
                                      message:
                                        type: string
  /product/202309/products/{product_id}/prices/update:
    post:
      summary: Update Price
      tags:
        - Product
      description: |
        This API allows you to change the price of a SKU. You can update the price of multiple SKUs of the same product.
        **Usage requirements**
        - Products need to be in living status.
        - The user must have permission to manage this product.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: product_id
          required: true
          schema:
            type: string
          description: The product id of the sku price to be changed. This product belongs to you, and you have permission to operate on it.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skus:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - price
                    properties:
                      id:
                        type: string
                        description: The SKU that needs price updates.
                      price:
                        type: object
                        required:
                          - amount
                          - currency
                        properties:
                          amount:
                            type: string
                            description: The new price amount for the SKU. Price restrictions vary in different regions and different types of businesses.
                          currency:
                            type: string
                            description: Currencies are different in different regions. The mapping relationship between region and currency is provided.
      responses:
        '200':
          description: SKU price update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                  data:
                    type: object
                    description: Specific return information.
  /product/202309/products/activate:
    post:
      summary: Activate Product
      tags:
        - Product
      description: |
        This API is used by sellers to activate currently deactivated (off-shelf) products. It does not apply to deleted, frozen, or draft products. Upon activation request, TTS will send the product to the TTS Marketplace team for auditing. The product will enter the PENDING state, pending approval.
        **Usage requirements**
        - Products need to be in deactivated status.
        - The user must have permission to activate these products.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_ids:
                  type: array
                  items:
                    type: string
                  description: Product IDs to be activated. The number of product IDs should not exceed 20.
      responses:
        '200':
          description: Product activation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                  data:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                            message:
                              type: string
                            detail:
                              type: object
                              properties:
                                product_id:
                                  type: string
                                extra_errors:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      code:
                                        type: integer
                                      message:
                                        type: string
  /product/202309/products/deactivate:
    post:
      summary: Deactivate Products
      tags:
        - Product
      description: |
        This API allows sellers to deactivate currently activated products. It does not apply to deleted, frozen, or draft products. The product will be removed from the active listings on TTS.
        
        **Usage requirements:**
        - Products need to be in active status.
        - The user must have permission to deactivate these products.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_ids:
                  type: array
                  items:
                    type: string
                  description: Product IDs to be deactivated. The number of product IDs should not exceed 20.
      responses:
        '200':
          description: Product deactivation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                  data:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                            message:
                              type: string
                            detail:
                              type: object
                              properties:
                                product_id:
                                  type: string
                                extra_errors:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      code:
                                        type: integer
                                      message:
                                        type: string
  /product/202309/products/recover:
    post:
      summary: Recover Products
      tags:
        - Product
      description: |
        Allows sellers to recover previously deleted products. Products in an activated, frozen, or draft state cannot be recovered through this API. After successful recovery, the product status will be changed to deactivated.
        
        **Usage requirements:**
        - Products must be in deleted status.
        - The user must have permission to operate on these products.
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_ids:
                  type: array
                  items:
                    type: string
                  description: Product IDs to be recovered, limited to 20 per request.
      responses:
        '200':
          description: Product recovery response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                  data:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: integer
                            message:
                              type: string
                            detail:
                              type: object
                              properties:
                                product_id:
                                  type: string
  /product/202309/inventory/search:
    post:
      summary: Inventory Search
      description: |
        The Inventory Search API can be used to retrieve detailed inventory information for Products or SKUs, including available inventory, campaign inventory, and more.

        - With this API, you have the option to pass either a list of SKUs or a list of product IDs.
        - If product IDs are provided, it returns inventory information for all SKUs under the product list.
        - If SKU IDs are provided, it returns inventory information for the specified SKUs.

        **Notice:**
        - Products need to be in live status.
        - The user must have permission to manage these products.
      tags:
        - Inventory
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_ids:
                  type: array
                  items:
                    type: string
                  example: ["1729592969712207008"]
                  description: Product id list, with a length of up to 100.
                sku_ids:
                  type: array
                  items:
                    type: string
                  example: ["1729388324987897824"]
                  description: SKU ID list, with a length of up to 600.
              description: You have to pass either sku_ids or product_ids. If both are provided, SKU IDs will be used.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventorySearchResponse'
  /product/202312/prerequisites:
    get:
      summary: Check Listing Prerequisites
      description: |
        Use this API to get the product rules of the shop and whether the prerequisites for listing product are met.
      tags:
        - Product
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckListingPrerequisitesResponse'
  /product/202401/listing_schemas:
    get:
      summary: Get Listing Schemas
      description: |
        The interface returns the field requirements for creating a product. By providing the leaf category ID, you can obtain the field information and input methods for the product creation requirements.
      tags:
        - Product
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: category_ids
          schema:
            type: array
            items:
              type: integer
          required: true
          description: The leaf category IDs to obtain field requirements for.
        - in: query
          name: locale
          schema:
            type: string
          required: false
          description: |
            Category information will be returned in the corresponding language based on the specified locale. If no locale is provided, the default locale of the store will be used. The currently supported locales include en-GB, en-US, id-ID, ms-MY, th-TH, vi-VN, zh-CN.
      responses:
        '200':
          description: Successful response with listing schema details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingSchemasResponse'
  /orders/search:
    post:
      summary: Retrieve orders list
      description: "Returns orders created or updated within a specified timeframe, with optional filtering criteria such as order status, delivery option type, and buyer user ID."
      tags:
        - Order
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
          description: "Specifies the maximum number of orders per page. Range: 1-100."
        - name: sort_order
          in: query
          required: false
          schema:
            type: string
          description: "Sort order of the results. Available values: ASC, DESC (default)."
        - name: page_token
          in: query
          required: false
          schema:
            type: string
          description: "Page token for pagination."
        - name: sort_field
          in: query
          required: false
          schema:
            type: string
          description: "Field by which to sort results. Options: create_time, update_time."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSearchCriteria'
      responses:
        '200':
          description: A list of orders matching criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'
  /order/202309/orders:
    get:
      summary: Get Order Detail
      description: Retrieve detailed information for specified orders, including status, shipping details, payment details, and item specifics.
      operationId: getOrderDetail
      tags:
        - Order
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: ids
          in: query
          required: true
          schema:
            type: string
          description: 'Comma-separated list of TikTok shop order IDs. Max count: 50.'
      responses:
        '200':
          description: Successfully retrieved order details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      orders:
                        type: array
                        items:
                          $ref: '#/components/schemas/OrderDetail'
  /fulfillment/202309/packages/search:
    post:
      summary: Retrieve package IDs based on specified conditions.
      operationId: searchPackage
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                create_time_ge:
                  type: integer
                create_time_lt:
                  type: integer
                update_time_ge:
                  type: integer
                update_time_lt:
                  type: integer
                package_status:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPackageResponse'
  /fulfillment/202309/packages/{package_id}:
    get:
      summary: Returns information about a package, including shipping details.
      operationId: getPackageDetail
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: package_id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the package.
      responses:
        '200':
          description: Detailed package information is successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageDetailResponse'
  /fulfillment/202309/packages/{package_id}/shipping_documents:
    get:
      summary: Retrieve shipping documents for a package
      operationId: getPackageShippingDocument
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: package_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the package.
        - name: document_type
          in: query
          required: true
          schema:
            type: string
            enum: [SHIPPING_LABEL, PACKING_SLIP, SHIPPING_LABEL_AND_PACKING_SLIP, SHIPPING_LABEL_PICTURE]
          description: Type of document to retrieve.
        - name: document_size
          in: query
          schema:
            type: string
            enum: [A6, A5]
            default: A6
          description: Size of the document. Applicable only to PDF documents.
      responses:
        '200':
          description: URL of the requested shipping document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingDocumentResponse'
  /fulfillment/202309/packages/{package_id}/handover_time_slots:
    get:
      summary: Retrieve available handover time slots for a package
      operationId: getPackageHandoverTimeSlots
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: package_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the package.
      responses:
        '200':
          description: Information about available handover time slots for the package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverTimeSlotsResponse'
  /fulfillment/202309/orders/{order_id}/tracking:
    get:
      summary: Obtain the logistics track for an order
      operationId: getTracking
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: order_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the trade order.
      responses:
        '200':
          description: Logistics tracking information for the specified order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingResponse'
  /fulfillment/202309/packages/{package_id}/shipping_info/update:
    post:
      summary: Update shipping information for a shipped package
      operationId: updatePackageShippingInfo
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: package_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the TikTok Shop package.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tracking_number
                - shipping_provider_id
              properties:
                tracking_number:
                  type: string
                  example: 576460868968549926
                  description: The shipment tracking number provided by the carrier.
                shipping_provider_id:
                  type: string
                  example: 6965352555291346690
                  description: Identifies the carrier. Use the Get Shipping Provider API to retrieve available providers.
      responses:
        '200':
          description: Shipping information update success response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePackageShippingInfoResponse'
  /fulfillment/202309/packages/deliver:
    post:
      summary: Update the delivered status of a package
      operationId: updatePackageDeliveryStatus
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                packages:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - delivery_type
                    properties:
                      id:
                        type: string
                        example: "11529598723402"
                        description: The ID of the package.
                      delivery_type:
                        type: string
                        enum: [DELIVERY_SUCCESS, DELIVERY_FAILED, UPDATE_POD]
                        example: DELIVERY_SUCCESS
                        description: Delivery status of the package.
                      fail_delivery_reason:
                        type: string
                        enum: [INVALID_ADDRESS, UNABLE_RECEIVE, UNABLE_CONTACT_BUYER, BUYER_REFUSED, DELAY_DELIVERY, PACKAGE_LOST, PACKAGE_DAMAGE, FORCE_MAJEURE, OTHER]
                        example: INVALID_ADDRESS
                        description: Reason for delivery failure.
                      file_type:
                        type: string
                        enum: [IMG, PDF]
                        example: IMG
                        description: Type of attachment.
                      file_url:
                        type: string
                        example: "https://tiktok.shopcenter.cn/file/CWvBsBZ9mhbMiHtmbZecKshon6f?table=tblTW"
                        description: URL of the attachment file.
      responses:
        '200':
          description: Success response for updating package delivery status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePackageDeliveryStatusResponse'
  /fulfillment/202309/orders/split_attributes:
    get:
      summary: Check if orders can be split into multiple packages
      operationId: getOrderSplitAttributes
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: order_ids
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
          description: Comma-separated TikTok Shop order IDs.
      responses:
        '200':
          description: Success response for checking order split attributes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSplitAttributesResponse'
  /fulfillment/202309/orders/{order_id}/split:
    post:
      summary: Confirm order split into multiple packages
      operationId: splitOrders
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: order_id
          in: path
          required: true
          schema:
            type: string
          description: TikTok shop order ID to split.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                splittable_groups:
                  type: array
                  items:
                    $ref: '#/components/schemas/SplittableGroup'
      responses:
        '200':
          description: Order split successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSplitResponse'
  /fulfillment/202309/combinable_packages/search:
    get:
      summary: Query orders eligible for combined shipping
      operationId: searchCombinablePackages
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: page_token
          in: query
          required: false
          schema:
            type: string
          description: Page token for pagination.
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 50
          description: Maximum number of packages to obtain on a single page.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombinablePackagesResponse'
  /fulfillment/202309/packages/combine:
    post:
      summary: Combine packages into one fulfillment package
      operationId: combinePackage
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CombinePackageRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombinePackageResponse'
  /fulfillment/202309/packages/{package_id}/uncombine:
    post:
      summary: Uncombine one or more orders from an already combined package
      operationId: uncombinePackage
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: package_id
          in: path
          required: true
          schema:
            type: string
          description: TikTok Shop Package ID.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UncombinePackagesRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UncombinePackagesResponse'
  /fulfillment/202309/orders/{order_id}/packages:
    post:
      summary: Marks a package as shipped in specific regions (currently US and UK)
      operationId: markPackageAsShipped
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: order_id
          in: path
          required: true
          schema:
            type: string
          description: TikTok Shop order ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkPackageAsShippedRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkPackageAsShippedResponse'
  /fulfillment/202309/packages/{package_id}/ship:
    post:
      summary: Ship a package using either TikTok Shipping or Seller Shipping
      operationId: shipPackage
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: package_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the package to be shipped.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipPackageRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipPackageResponse'
  /fulfillment/202309/packages/ship:
    post:
      summary: Batch ship packages for either TikTok Shipping or Seller Shipping
      operationId: batchShipPackages
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchShipPackagesRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchShipPackagesResponse'
  /fulfillment/202309/files/upload:
    post:
      summary: Upload a package delivery file for SOF (Seller Own Fleet) sellers.
      operationId: uploadDeliveryFile
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: binary
                  description: PDF file data to be uploaded. Only supports PDF format and max size is 10MB.
                name:
                  type: string
                  example: "delivery_document.pdf"
                  description: The name of the uploaded file, including the file extension.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDeliveryFileResponse'
  /fulfillment/202309/orders/{order_id}/shipping_services/query:
    post:
      summary: Query available shipping services based on package dimensions and weight.
      operationId: queryShippingServices
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: order_id
          schema:
            type: string
          required: true
          description: TikTok Shop order ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_line_item_ids:
                  type: array
                  items:
                    type: string
                  description: List of order line item IDs.
                  example: ["32132124331234"]
                weight:
                  type: object
                  properties:
                    value:
                      type: string
                      description: The weight of the scheduled package.
                      example: "0.4"
                    unit:
                      type: string
                      description: The unit of measurement for weight.
                      example: "GRAM"
                  required:
                    - value
                    - unit
                dimension:
                  type: object
                  properties:
                    length:
                      type: string
                      description: Length of the package.
                      example: "0.3"
                    width:
                      type: string
                      description: Width of the package.
                      example: "0.2"
                    height:
                      type: string
                      description: Height of the package.
                      example: "0.04"
                    unit:
                      type: string
                      description: Unit of measurement for dimensions.
                      example: "INCH"
                  required:
                    - length
                    - width
                    - height
                    - unit
      responses:
        '200':
          description: A list of available shipping services based on provided package dimensions and weight.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingServicesResponse'
  /fulfillment/202309/packages:
    post:
      summary: Create Packages
      description: >-
        Use this API to ship orders (purchase labels). This API is region
        specific to the US. The shipping fee and delivery time is an estimate
        only and is based on the package dimensions and weight you provided.
        Options listed may differ from your shipping subscriptions.
      tags:
        - Fulfillment
      operationId: createPackages
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - order_id
                - dimension
                - weight
              properties:
                order_id:
                  type: string
                  description: TikTok Shop order ID.
                  example: "2882335594258860015"
                order_line_item_ids:
                  type: array
                  items:
                    type: string
                  description: List of order line item IDs.
                  example: ["32132124331234"]
                dimension:
                  type: object
                  required:
                    - length
                    - width
                    - height
                    - unit
                  properties:
                    length:
                      type: string
                      description: The length of the package.
                      example: "1.2"
                    width:
                      type: string
                      description: The width of the package.
                      example: "0.2"
                    height:
                      type: string
                      description: The height of the package.
                      example: "0.03"
                    unit:
                      type: string
                      description: The unit of measurement for the package's dimensions.
                      example: "CM"
                shipping_service_id:
                  type: string
                  description: Specify the shipping service used for shipping. If not specified, the default service obtained from the Get Shipping Service API is used.
                  example: "288233559123860015"
                weight:
                  type: object
                  required:
                    - value
                    - unit
                  properties:
                    value:
                      type: string
                      description: The weight of the scheduled package.
                      example: "1.2"
                    unit:
                      type: string
                      description: The unit of measurement for the package's weight.
                      example: "GRAM"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackageResponse'
  /fulfillment/202309/orders/{order_id}/shipping_info/update:
    post:
      summary: Update shipping information for an already shipped order.
      operationId: updateShippingInfo
      tags:
        - Fulfillment
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: order_id
          required: true
          schema:
            type: string
          description: TikTok Shop order ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tracking_number
                - shipping_provider_id
              properties:
                tracking_number:
                  type: string
                  description: The shipment tracking number provided by the carrier.
                  example: "576460868968549926"
                shipping_provider_id:
                  type: string
                  description: Identifies the carrier that will deliver the package. Use Get Shipping Provider API to retrieve the shipping provider ID.
                  example: "6965352555291346690"
      responses:
        '200':
          description: Successfully updated shipping information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShippingInfoResponse'
        '400':
          description: Bad request, such as missing required fields or invalid data format.
        '401':
          description: Unauthorized access, invalid API key or token.
        '404':
          description: The specified order ID was not found.
        '500':
          description: Internal server error, failed to update shipping info due to server issues.
  /return_refund/202309/cancellations/search:
    post:
      summary: Retrieve order cancellations based on various criteria.
      operationId: searchCancellations
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: sort_field
          in: query
          schema:
            type: string
          description: Fields to sort order by. Available values create_time (default), update_time.
        - name: sort_order
          in: query
          schema:
            type: string
          description: Sort order. Available values ASC (default), DESC.
        - name: page_size
          in: query
          schema:
            type: string
            default: "10"
          description: Size of one page. Default is 10. Upper limit is 50.
        - name: page_token
          in: query
          schema:
            type: string
          description: Token of pagination. Should be empty on the first page. Get next page token from response.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cancel_ids:
                  type: array
                  items:
                    type: string
                  description: List of order cancellations ids.
                order_ids:
                  type: array
                  items:
                    type: string
                  description: List of TikTok Shop order ids.
                buyer_user_ids:
                  type: array
                  items:
                    type: string
                  description: List of TikTok Shop buyer user ids.
                cancel_types:
                  type: array
                  items:
                    type: string
                  description: List of cancel types
                  enum:
                    - CANCEL
                    - BUYER_CANCEL
                cancel_status:
                  type: array
                  items:
                    type: string
                  description: List of order cancellation status
                  enum:
                    - CANCELLATION_REQUEST_PENDING
                    - CANCELLATION_REQUEST_SUCCESS
                    - CANCELLATION_REQUEST_CANCELLED
                    - CANCELLATION_REQUEST_COMPLETE
                create_time_ge:
                  type: integer
                  description: Create time greater than or equal to.
                create_time_lt:
                  type: integer
                  description: Create time less than.
                update_time_ge:
                  type: integer
                  description: Update time greater than or equal to.
                update_time_lt:
                  type: integer
                  description: Update time less than.
                locale:
                  type: string
                  description: BCP 47 locale identifier. Default value is "en".
      responses:
        '200':
          description: Successfully retrieved order cancellations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCancellationsResponse'
        '400':
          description: Bad request, such as missing required fields or invalid data format.
        '401':
          description: Unauthorized access, invalid API key or token.
        '500':
          description: Internal server error, failed to retrieve order cancellations due to server issues.
  /return_refund/202309/cancellations/{cancel_id}/approve:
    post:
      summary: Approve a buyer's order cancellation request
      operationId: approveCancellation
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: cancel_id
          required: true
          schema:
            type: string
          description: The identifier of a specific cancellation request.
        - in: query
          name: idempotency_key
          schema:
            type: string
          description: The idempotency key is a unique value generated by the client which the server uses to recognize subsequent attempts to perform the same operation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
              description: Empty JSON object as the API does not require a body for approval.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveCancelResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/cancellations/{cancel_id}/reject:
    post:
      summary: Reject a buyer's order cancellation request
      operationId: rejectCancellation
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: cancel_id
          required: true
          schema:
            type: string
          description: The identifier of a specific cancellation request.
        - in: query
          name: idempotency_key
          schema:
            type: string
          description: The idempotency key is a unique value generated by the client which the server uses to recognize subsequent attempts to perform the same operation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reject_reason:
                  type: string
                  description: Seller's reason for rejecting the buyer's order cancellation request.
                  example: "seller_reject_apply_product_has_been_packed"
                comment:
                  type: string
                  description: Seller's comment on the reject decision. This is where a seller will provide more information about rejecting the request.
                  example: "I have packed the products before the cancellation request."
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      image_id:
                        type: string
                        description: Image id.
                        example: "tos-maliva-i-o3syd03w52-us/57a1c8908fe74572861ea5e50887d8d1"
                      mime_type:
                        type: string
                        description: Mime type of the image.
                        example: "image/png"
                      height:
                        type: integer
                        description: Image height in pixels.
                        example: 200
                      width:
                        type: integer
                        description: Image width in pixels.
                        example: 200
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectCancellationResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/returns/search:
    post:
      summary: Retrieve one or more returns based on specified filters
      operationId: searchReturns
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: sort_field
          schema:
            type: string
            enum: [create_time, update_time]
            default: create_time
          description: Field to sort orders by.
        - in: query
          name: sort_order
          schema:
            type: string
            enum: [ASC, DESC]
            default: ASC
          description: Sort order direction.
        - in: query
          name: page_size
          schema:
            type: string
            default: '10'
          description: Size of one page, with an upper limit of 50.
        - in: query
          name: page_token
          schema:
            type: string
          description: Token for pagination, should be empty on the first page and use the next page token from the response for subsequent pages.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                return_ids:
                  type: array
                  items:
                    type: string
                  description: List of return IDs for filtering.
                order_ids:
                  type: array
                  items:
                    type: string
                  description: List of TikTok Shop order IDs for filtering.
                buyer_user_ids:
                  type: array
                  items:
                    type: string
                  description: List of TikTok Shop buyer user IDs for filtering.
                return_types:
                  type: array
                  items:
                    type: string
                    enum: [REFUND, RETURN_AND_REFUND, REPLACEMENT]
                  description: Filter by the type of return. Available types include REFUND, RETURN_AND_REFUND, and REPLACEMENT.
                return_status:
                  type: array
                  items:
                    type: string
                    enum: [RETURN_OR_REFUND_REQUEST_PENDING, REFUND_OR_RETURN_REQUEST_REJECT, AWAITING_BUYER_SHIP, BUYER_SHIPPED_ITEM, REJECT_RECEIVE_PACKAGE, RETURN_OR_REFUND_REQUEST_SUCCESS, RETURN_OR_REFUND_REQUEST_CANCEL, RETURN_OR_REFUND_REQUEST_COMPLETE, REPLACEMENT_REQUEST_PENDING, REPLACEMENT_REQUEST_REJECT, REPLACEMENT_REQUEST_REFUND_SUCCESS, REPLACEMENT_REQUEST_CANCEL, REPLACEMENT_REQUEST_COMPLETE]
                  description: Filter by the status of the return.
                arbitration_status:
                  type: array
                  items:
                    type: string
                    enum: [IN_PROGRESS, SUPPORT_BUYER, SUPPORT_SELLER, CLOSED]
                  description: Filter by the arbitration status.
                create_time_ge:
                  type: integer
                  description: Filter returns created after or at this Unix timestamp.
                create_time_lt:
                  type: integer
                  description: Filter returns created before this Unix timestamp.
                update_time_ge:
                  type: integer
                  description: Filter returns updated after or at this Unix timestamp.
                update_time_lt:
                  type: integer
                  description: Filter returns updated before this Unix timestamp.
                locale:
                  type: string
                  description: BCP 47 locale identifier to set the language of response fields.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchReturnsResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/returns/{return_id}/approve:
    post:
      summary: Approve a buyer's return request
      operationId: approveReturn
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: return_id
          required: true
          schema:
            type: string
          description: The identifier of a specific return request.
        - in: query
          name: idempotency_key
          schema:
            type: string
          description: The idempotency key is a unique value generated by the client which the server uses to recognize subsequent attempts to perform the same operation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                decision:
                  type: string
                  enum: [APPROVE_REFUND, APPROVE_RETURN, APPROVE_RECEIVED_PACKAGE, APPROVE_REPLACEMENT, ISSUE_REPLACEMENT_REFUND]
                  description: Seller's decision for the return request.
                buyer_keep_item:
                  type: boolean
                  description: If true, the seller will issue a returnless refund. The seller will refund without requiring the buyer to send the product back.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveReturnResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/returns/{return_id}/reject:
    post:
      summary: Reject a buyer's return or refund request
      operationId: rejectReturn
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: return_id
          required: true
          schema:
            type: string
          description: The identifier of a specific return request.
        - in: query
          name: idempotency_key
          schema:
            type: string
          description: The idempotency key is a unique value generated by the client which the server uses to recognize subsequent attempts to perform the same operation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                decision:
                  type: string
                  enum: [REJECT_REFUND, REJECT_RETURN, REJECT_RECEIVED_PACKAGE, REJECT_REPLACEMENT]
                  description: Seller's decision for the return request.
                reject_reason:
                  type: string
                  description: Seller's reason to reject the buyer's return request.
                comment:
                  type: string
                  description: Seller's comment on the reject decision.
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      image_id:
                        type: string
                        description: Image id.
                      mime_type:
                        type: string
                        description: Mime type of the image.
                      height:
                        type: integer
                        description: Image height in pixels.
                      width:
                        type: integer
                        description: Image width in pixels.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectReturnResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/orders/{order_id}/aftersale_eligibility:
    get:
      summary: Check after-sales solution eligibility for an order
      operationId: getAftersaleEligibility
      tags:
        - After-Sales
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: order_id
          required: true
          schema:
            type: string
          description: TikTok Shop order ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAftersaleEligibilityResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/reject_reasons:
    get:
      summary: Get eligible cancel or return order reject reasons
      operationId: getRejectReasons
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: locale
          schema:
            type: string
          description: BCP 47 locale identifier. Default "en". Affects multilingual text such as reason_text.
          required: false
        - in: query
          name: return_or_cancel_id
          required: true
          schema:
            type: string
          description: A return ID or a cancel ID for which the reject reasons are requested.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRejectReasonsResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/refunds/calculate:
    post:
      summary: Check order refundable amounts
      operationId: calculateRefund
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: TikTok Shop order ID.
                  example: "576469648086175911"
                request_type:
                  type: string
                  description: Request type for different aftersales scenarios.
                  enum: [CANCEL, REFUND, RETURN_AND_REFUND]
                  example: "REFUND"
                shipment_type:
                  type: string
                  description: How buyer ships items to seller in a return request.
                  enum: [PLATFORM, BUYER_ARRANGE]
                  example: "PLATFORM"
                handover_method:
                  type: string
                  description: Handover method buyer chooses for returning goods to seller.
                  enum: [DROP_OFF, PICKUP]
                  example: "DROP_OFF"
                reason_name:
                  type: string
                  description: Seller's reason for creating a return. Refer to API overview for all available reasons.
                  example: "ecom_order_delivered_refund_reason_missing_product_seller"
                order_line_item_ids:
                  type: array
                  items:
                    type: string
                  description: TikTok Shop order line item IDs.
                  example: ["576469648086306986"]
                skus:
                  type: array
                  items:
                    type: object
                    properties:
                      sku_id:
                        type: string
                        description: SKU ID seller wants to create a return request for.
                        example: "1729386416015578024"
                      quantity:
                        type: integer
                        description: Quantity seller wants to create a return request for.
                        example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateRefundResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/returns/{return_id}/records:
    get:
      summary: Query return records
      operationId: getReturnRecords
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: return_id
          required: true
          schema:
            type: string
          description: A specific return ID.
        - in: query
          name: locale
          schema:
            type: string
          description: BCP 47 locale identifier. Defaults to "en". Affects multilingual text such as reason_text.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReturnRecordsResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/cancellations:
    post:
      summary: Cancel an order on behalf of a seller
      operationId: cancelOrder
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: TikTok Shop order ID.
                  example: "577087614418520388"
                skus:
                  type: array
                  items:
                    type: object
                    properties:
                      sku_id:
                        type: string
                        description: The SKU ID to cancel.
                        example: "1729386416015578024"
                      quantity:
                        type: integer
                        description: The quantity of SKU to cancel.
                        example: 1
                order_line_item_ids:
                  type: array
                  items:
                    type: string
                  description: List of order line item IDs to cancel. In the US and UK, partial cancellation on the single item level is supported.
                  example: ["577087614418716996"]
                cancel_reason:
                  type: string
                  description: Reason to cancel the order. Refer to "Return API Overview" for available reasons.
                  example: "ecom_order_delivered_refund_and_return_reason_wrong_product_seller"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelOrderResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /return_refund/202309/returns:
    post:
      summary: Initiate a return request on behalf of the buyer
      operationId: createReturn
      tags:
        - Return and Refund
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: idempotency_key
          schema:
            type: string
          description: Idempotency Key to prevent duplicate requests.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: Tiktok Shop order ID.
                  example: "576473917261320779"
                skus:
                  type: array
                  items:
                    type: object
                    properties:
                      sku_id:
                        type: string
                        description: SKU ID for the return request.
                        example: "1729386416015578024"
                      quantity:
                        type: integer
                        description: Quantity for the return request.
                        example: 1
                order_line_item_ids:
                  type: array
                  items:
                    type: string
                  description: Order line IDs for the return request.
                  example: ["455764739172614518516"]
                return_reason:
                  type: string
                  description: Seller's reason for initiating a return.
                  example: "ecom_order_delivered_refund_reason_missing_product_seller"
                return_type:
                  type: string
                  description: Type of return being initiated.
                  enum: [REFUND, RETURN_AND_REFUND]
                  example: "REFUND"
                refund_total:
                  type: string
                  description: Total refund amount to the buyer.
                  example: "10.5"
                currency:
                  type: string
                  description: Currency for the refund.
                  example: "USD"
                shipment_type:
                  type: string
                  description: How the buyer ships items back to the seller.
                  enum: [PLATFORM, BUYER_ARRANGE]
                  example: "PLATFORM"
                handover_method:
                  type: string
                  description: Handover method chosen by the buyer.
                  enum: [DROP_OFF, PICKUP]
                  example: "DROP_OFF"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReturnResponse'
        '4XX':
          description: Client error, such as bad request or not authorized.
        '5XX':
          description: Server error.
  /logistics/202309/warehouses/{warehouse_id}/delivery_options:
    get:
      summary: Obtain the list of Delivery options for a seller's warehouse
      operationId: getWarehouseDeliveryOptions
      tags:
        - Logistics
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: warehouse_id
          required: true
          schema:
            type: string
          description: Warehouse ID to retrieve delivery options for.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarehouseDeliveryOptionsResponse'
        '4XX':
          description: Client error, such as bad request or not authorized.
        '5XX':
          description: Server error.
  /logistics/202309/warehouses:
    get:
      summary: Retrieve all warehouse information associated with the seller
      operationId: getWarehouseList
      tags:
        - Logistics
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarehouseListResponse'
        '4XX':
          description: Client error, such as bad request or not authorized.
        '5XX':
          description: Server error.
  /logistics/202309/delivery_options/{delivery_option_id}/shipping_providers:
    get:
      summary: Obtain shipping providers for a specified delivery option
      operationId: getShippingProviders
      tags:
        - Logistics
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: delivery_option_id
          required: true
          schema:
            type: string
          description: The specific delivery option identifier for which to retrieve the shipping provider list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShippingProvidersResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /logistics/202309/global_warehouses:
    get:
      summary: Retrieves global warehouse information for the seller
      operationId: getGlobalSellerWarehouse
      tags:
        - Logistics
      parameters:
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGlobalSellerWarehouseResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /promotion/202309/activities:
    post:
      summary: Create a Promotion Activity
      operationId: createPromotionActivity
      tags:
        - Promotion
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Activity name, up to 50 characters. Must be unique.
                  example: DiscountEvent0829
                activity_type:
                  type: string
                  description: Type of promotion activity. Cannot be changed once created.
                  enum:
                    - FIXED_PRICE
                    - DIRECT_DISCOUNT
                    - FLASHSALE
                  example: FIXED_PRICE
                begin_time:
                  type: integer
                  description: Start time of the activity, in unix timestamp.
                  example: 1661756811
                end_time:
                  type: integer
                  description: End time of the activity, in unix timestamp.
                  example: 1661856811
                product_level:
                  type: string
                  description: Dimension of the activity, PRODUCT for product-level, VARIATION for variant-level (SKU).
                  enum:
                    - PRODUCT
                    - VARIATION
                  example: PRODUCT
      responses:
        '200':
          description: Successfully created a promotion activity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePromotionActivityResponse'
        '4XX':
          description: Client error, such as bad request or request not authorized.
        '5XX':
          description: Server error.
  /promotion/202309/activities/{activity_id}/products:
    put:
      summary: Update Activity Product
      operationId: updateActivityProduct
      tags:
        - Promotion
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: activity_id
          required: true
          schema:
            type: string
          description: A unique ID that identifies different activities.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: TikTok Shop product ID.
                      activity_price_amount:
                        type: string
                        description: Required if the activity type is FIXED_PRICE/FLASHSALE. The currency of activity price is the same as the product price.
                        example: "4.5"
                      discount:
                        type: string
                        description: Activity discount, available only if activity_type is DIRECT_DISCOUNT. If activity discount is 10%, then discount is "10".
                        example: "10"
                      quantity_limit:
                        type: integer
                        description: Activity stock, you can either input "-1" (no limit) or a specific number. Activity stock you set must not be greater than the current stock.
                        example: -1
                      quantity_per_user:
                        type: integer
                        description: Purchase limit per buyer, you can either input "-1" (no limit) or a specific number.
                        example: -1
                      skus:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: SKU ID
                              example: "7125688837187176194"
                            activity_price_amount:
                              type: string
                              description: Fill this field only if the activity type is FIXED_PRICE/FLASHSALE.
                              example: "6.5"
                            discount:
                              type: string
                              description: Activity discount, available only if activity_type is DIRECT_DISCOUNT.
                              example: "10"
                            quantity_limit:
                              type: integer
                              description: Activity stock, you can either input "-1" (no limit) or a specific number.
                              example: -1
                            quantity_per_user:
                              type: integer
                              description: Purchase limit per buyer, you can either input "-1" (no limit) or a specific number.
                              example: 10
      responses:
        '200':
          description: Successfully updated the activity product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivityProductResponse'
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
    delete:
      summary: Remove Activity Product
      operationId: removeActivityProduct
      tags:
        - Promotion
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: activity_id
          required: true
          schema:
            type: string
          description: A unique ID that identifies different activities.
        - in: query
          name: product_ids
          required: false
          schema:
            type: array
            items:
              type: string
          description: Product ID(s) to remove from the activity.
          style: form
          explode: true
        - in: query
          name: sku_ids
          required: false
          schema:
            type: array
            items:
              type: string
          description: Product variation SKU ID(s) to remove from the activity.
          style: form
          explode: true
      responses:
        '200':
          description: Successfully removed the products or product variants from the promotion activity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: "Success"
                  request_id:
                    type: string
                    example: "202203070749000101890810281E8C70B7"
                  data:
                    type: object
                    properties:
                      activity_id:
                        type: string
                        example: "7136104329798256386"
                      status:
                        type: string
                        example: "ONGOING"
                      update_time:
                        type: integer
                        example: 1661765135
        '4XX':
          description: Client error, such as a bad request or request not authorized.
        '5XX':
          description: Server error.
  /promotion/202309/activities/search:
    post:
      summary: Search Activities
      operationId: searchActivities
      tags:
        - Promotion
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [DRAFT, NOT_START, ONGOING, EXPIRED, DEACTIVATED, NOT_EFFECTIVE]
                  description: Filter activities by their status.
                activity_title:
                  type: string
                  description: Filter activities by title keywords.
                page_size:
                  type: integer
                  description: Specify the number of activities to return in the response. Maximum limit is 100, default limit is 50.
                page_token:
                  type: string
                  description: Page cursor for pagination. The first page can be empty.
      responses:
        '200':
          description: A list of promotion activities filtered by the given conditions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: "Success"
                  request_id:
                    type: string
                    example: "202203070749000101890810281E8C70B7"
                  data:
                    type: object
                    properties:
                      total_count:
                        type: integer
                        example: 120
                      next_page_token:
                        type: string
                        example: "123"
                      activities:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: "7136104329798256386"
                            title:
                              type: string
                              example: "FlashSale 20230707"
                            activity_type:
                              type: string
                              enum: [FIXED_PRICE, DIRECT_DISCOUNT, FLASHSALE]
                              example: "FIXED_PRICE"
                            begin_time:
                              type: integer
                              example: 1661756811
                            end_time:
                              type: integer
                              example: 1661756811
                            status:
                              type: string
                              enum: [DRAFT, NOT_START, ONGOING, EXPIRED, DEACTIVATED, NOT_EFFECTIVE]
                              example: "ONGOING"
                            create_time:
                              type: integer
                              example: 1661756811
                            update_time:
                              type: integer
                              example: 1661756811
                            product_level:
                              type: string
                              enum: [PRODUCT, VARIATION]
                              example: "PRODUCT"
  /promotion/202309/activities/{activity_id}:
    get:
      summary: Get Activity Details
      operationId: getActivityDetails
      tags:
        - Promotion
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: activity_id
          required: true
          schema:
            type: string
          description: A unique ID that identifies the activity.
      responses:
        '200':
          description: Detailed information about a specific promotion activity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: "Success"
                  request_id:
                    type: string
                    example: "202203070749000101890810281E8C70B7"
                  data:
                    type: object
                    properties:
                      activity_id:
                        type: string
                        example: "7136104329798256386"
                      title:
                        type: string
                        example: "FlashSale 20230707"
                      activity_type:
                        type: string
                        enum: [FIXED_PRICE, DIRECT_DISCOUNT, FLASHSALE]
                        example: "FIXED_PRICE"
                      begin_time:
                        type: integer
                        example: 1661756811
                      end_time:
                        type: integer
                        example: 1661856811
                      product_level:
                        type: string
                        enum: [PRODUCT, VARIATION]
                        example: "PRODUCT"
                      products:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: "7136011254174631686"
                            activity_price:
                              type: object
                              properties:
                                amount:
                                  type: string
                                  example: "70500"
                                currency:
                                  type: string
                                  example: "IDR"
                            quantity_limit:
                              type: integer
                              example: -1
                            quantity_per_user:
                              type: integer
                              example: -1
                            discount:
                              type: string
                              example: "10"
                            skus:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    example: "7136382541418366725"
                                  discount:
                                    type: string
                                    example: "10"
                                  quantity_limit:
                                    type: integer
                                    example: -1
                                  quantity_per_user:
                                    type: integer
                                    example: -1
                                  activity_price:
                                    type: object
                                    properties:
                                      amount:
                                        type: string
                                        example: "70500"
                                      currency:
                                        type: string
                                        example: "IDR"
                      status:
                        type: string
                        enum: [DRAFT, NOT_START, ONGOING, EXPIRED, DEACTIVATED, NOT_EFFECTIVE]
                        example: "ONGOING"
                      create_time:
                        type: integer
                        example: 1661750811
                      update_time:
                        type: integer
                        example: 1661750811
    put:
      summary: Update Promotion Activity
      operationId: updatePromotionActivity
      tags:
        - Promotion
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: activity_id
          required: true
          schema:
            type: string
          description: A unique ID that identifies the activity to be updated.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "BlackFridayDiscount"
                  description: "The new title for the activity."
                begin_time:
                  type: integer
                  example: 1661756811
                  description: "The updated start time of the activity, as a Unix timestamp."
                end_time:
                  type: integer
                  example: 1662756811
                  description: "The updated end time of the activity, as a Unix timestamp."
      responses:
        '200':
          description: Activity information updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: "Success"
                  request_id:
                    type: string
                    example: "202203070749000101890810281E8C70B7"
                  data:
                    type: object
                    properties:
                      activity_id:
                        type: string
                        example: "7136104329798256386"
                      title:
                        type: string
                        example: "BlackFridayDiscount"
                      update_time:
                        type: integer
                        example: 1661756811
                      status:
                        type: string
                        description: "The status of the activity after the update."
  /promotion/202309/activities/{activity_id}/deactivate:
    post:
      summary: Deactivate Promotion Activity
      operationId: deactivatePromotionActivity
      tags:
        - Promotion
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: activity_id
          required: true
          schema:
            type: string
          description: A unique ID that identifies the activity to be deactivated.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          description: Activity successfully deactivated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: "Success"
                  request_id:
                    type: string
                    example: "202203070749000101890810281E8C70B7"
                  data:
                    type: object
                    properties:
                      activity_id:
                        type: string
                        example: "7136104329798256386"
                      title:
                        type: string
                        example: "FlashSale 20230707"
                      status:
                        type: string
                        example: "ONGOING"
                      update_time:
                        type: integer
                        example: 1661756811
  /finance/202309/orders/{order_id}/statement_transactions:
    get:
      summary: Get Order Statement Transactions
      description: Only for UK and US local sellers. This API retrieves a list of transactions associated with an order specified by the order ID. It also returns the SKU level transaction details.
      operationId: getOrderStatementTransactions
      tags:
        - Finance
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - name: order_id
          in: path
          required: true
          schema:
            type: string
          description: Order ID
      responses:
        '200':
          description: Successfully retrieved statement transactions for the specified order.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                    description: The success or failure status code returned in API response.
                  message:
                    type: string
                    example: Success
                    description: The success or failure messages returned in API response. Reasons of failure will be described in the message.
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                    description: Request log
                  data:
                    type: object
                    properties:
                      order_id:
                        type: string
                        example: 5793990727963214852
                        description: Order ID
                      order_create_time:
                        type: integer
                        example: 1685548800
                        description: The create time of the order
                      statement_transactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/OrderStatementTransaction'
  /finance/202309/statements/{statement_id}/statement_transactions:
    get:
      summary: Get Statement Transactions
      operationId: getStatementTransactions
      tags:
        - Finance
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: statement_id
          required: true
          schema:
            type: string
          description: The unique id of statement.
        - in: query
          name: page_token
          schema:
            type: string
          description: The default is an empty string.
        - in: query
          name: sort_field
          required: true
          schema:
            type: string
            enum: [order_create_time]
          description: Only supports order_create_time.
        - in: query
          name: sort_order
          schema:
            type: string
            enum: [ASC, DESC]
          description: The default is ASC, the developer can choose ASC or DESC.
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: The default is 20. It must be a positive integer, the range is 1-100.
      responses:
        '200':
          description: A list of transactions based on statement_id.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      next_page_token:
                        type: string
                        example: 6AsPQsUMvH3RkchNUPPh22NROHkE0D8pmq/N5M1kHYcZmtRyv9aVrNv65W7Q6tFA+7D1ud64MPNz5OaT
                      statement_id:
                        type: string
                        example: 7238804564097517339
                      statement_time:
                        type: integer
                        example: 1685548800
                      settlement_amount:
                        type: string
                        example: 130
                      currency:
                        type: string
                        example: GBP
                      revenue_amount:
                        type: string
                        example: 200
                      fee_amount:
                        type: string
                        example: -30
                      adjustment_amount:
                        type: string
                        example: -70
                      total_count:
                        type: integer
                        example: 2
                      statement_transactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatementTransaction'
  /finance/202309/withdrawals:
    get:
      summary: Get Withdrawals
      operationId: getWithdrawals
      tags:
        - Finance
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: create_time_lt
          schema:
            type: integer
          description: Unix timestamp representing the end of transactions time range one wants to request.
        - in: query
          name: types
          required: true
          schema:
            type: array
            items:
              type: string
              enum: [WITHDRAW, SETTLE, TRANSFER, REVERSE]
          description: >
            The type of transaction. Possible values:
            - WITHDRAW: The action of the seller to receive the settlement amount to the bank card through the action of withdrawal.
            - SETTLE: The platform settles the amount to the seller.
            - TRANSFER: Platform subsidies or deductions due to platform policies.
            - REVERSE: Withdrawal failure due to incorrect bank card.
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: The default is 20, it must be a positive integer, the range is 1-100.
        - in: query
          name: page_token
          schema:
            type: string
          description: The next page token.
        - in: query
          name: create_time_ge
          schema:
            type: integer
          description: Unix timestamp representing the start of transactions time range one wants to request.
      responses:
        '200':
          description: A list of withdrawal records based on the specified date range.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      next_page_token:
                        type: string
                        example: 6AsPQsUMvH3RkchNUPPh22NROHkE0D8pmq/N5M1kHYcZmtRyv9aVrNv65W7Q6tFA+7D1ud64MPNz5OaT
                      total_count:
                        type: integer
                        example: 1
                      withdrawals:
                        type: array
                        items:
                          $ref: '#/components/schemas/Withdrawal'
  /finance/202309/statements:
    get:
      summary: Get Statements
      operationId: getStatements
      tags:
        - Finance
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: statement_time_lt
          schema:
            type: integer
          description: Timestamp (Second level), time used for selecting statements that opened before (but not at) a specified time.
        - in: query
          name: payment_status
          schema:
            type: string
            enum: [PAID, FAILED, PROCESSING]
          description: This optional parameter allows you to filter your query based on one of 3 payment statuses. If you don't supply a payment_status, then we will return all 3 payment_status types.
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: The default is 20. It must be a positive integer, the range is 1-100.
        - in: query
          name: page_token
          schema:
            type: string
          description: The default is empty string.
        - in: query
          name: sort_field
          schema:
            type: string
            enum: [statement_time]
          description: Only support statement_time.
        - in: query
          name: sort_order
          schema:
            type: string
            enum: [ASC, DESC]
            default: ASC
          description: The default is ASC, the developer can choose ASC or DESC.
        - in: query
          name: statement_time_ge
          schema:
            type: integer
          description: Timestamp (Second level), time used for selecting statements that opened after (or at) a specified time.
      responses:
        '200':
          description: A list of statement records based on the specified date range.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      next_page_token:
                        type: string
                        example: 6AsPQsUMvH3RkchNUPPh22NROHkE0D8pmq/N5M1kHYcZmtRyv9aVrNv65W7Q6tFA+7D1ud64MPNz5OaT
                      statements:
                        type: array
                        items:
                          $ref: '#/components/schemas/Statement'
  /finance/202309/payments:
    get:
      summary: Get Payments
      operationId: getPayments
      tags:
        - Finance
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: create_time_lt
          schema:
            type: integer
          description: Timestamp (Second level), time used for selecting payments that opened before (but not at) a specified time.
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: The default is 20, it must be positive integer, the range is 1-100.
        - in: query
          name: page_token
          schema:
            type: string
          description: The default is empty string.
        - in: query
          name: sort_field
          schema:
            type: string
            enum: [create_time]
          description: Only support create_time.
        - in: query
          name: sort_order
          schema:
            type: string
            enum: [ASC, DESC]
            default: ASC
          description: The default is ASC. The developer can choose ASC or DESC.
        - in: query
          name: create_time_ge
          schema:
            type: integer
          description: Timestamp (Second level), time used for selecting payments that opened after (or at) a specified time.
      responses:
        '200':
          description: A list of payment records based on the specified date range.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      next_page_token:
                        type: string
                        example: 6AsPQsUMvH3RkchNUPPh22NROHkE0D8pmq/N5M1kHYcZmtRyv9aVrNv65W7Q6tFA+7D1ud64MPNz5OaT
                      payments:
                        type: array
                        items:
                          $ref: '#/components/schemas/Payment'
  /customer_service/202309/conversations/{conversation_id}/messages:
    get:
      summary: Get Conversation Messages
      operationId: getConversationMessages
      tags:
        - Customer Service
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
          description: Conversation ID.
        - in: query
          name: page_token
          schema:
            type: string
          description: Paging cursor, indicates where this query should start.
        - in: query
          name: page_size
          required: true
          schema:
            type: integer
            maximum: 10
          description: Number of conversations in one page. Max 10.
        - in: query
          name: locale
          schema:
            type: string
            enum: [zh-CN, id-ID, ms-MY, th-TH, vi-VN, en, en-GB]
          description: System message's display language.
        - in: query
          name: sort_order
          schema:
            type: string
            enum: [create_time]
          description: Sort messages by create_time (default).
        - in: query
          name: sort_field
          schema:
            type: string
            enum: [ASC, DESC]
            default: DESC
          description: Sort order for create_time.
      responses:
        '200':
          description: All messages in a conversation between a buyer and a shop.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      next_page_token:
                        type: string
                        example: 162312320
                      unsupported_msg_tips:
                        type: string
                        example: Please check this message in Seller Center.
                      messages:
                        type: array
                        items:
                          $ref: '#/components/schemas/Message'
    post:
      summary: Send a message to the buyer in a conversation
      operationId: sendMessage
      tags:
        - Customer Service
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
          description: Conversation ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - content
              properties:
                type:
                  type: string
                  enum: [TEXT, IMAGE, PRODUCT_CARD, ORDER_CARD]
                  description: Message type
                  example: TEXT
                content:
                  type: string
                  description: >
                    Message content, in JSON string. For different types of messages, the structure of the content will vary.
                  example: '{"content": "hi, I want to refund"}'
      responses:
        '200':
          description: >
            Successfully sent the message. The response includes the unique message ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      message_id:
                        type: string
                        example: 7494560109732334261                       
  /customer_service/202309/conversations:
    get:
      summary: Get Shop's Conversations
      operationId: getConversations
      tags:
        - Customer Service
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: query
          name: page_token
          schema:
            type: string
          description: Paging cursor, this means where this query should start.
        - in: query
          name: page_size
          required: true
          schema:
            type: integer
            maximum: 20
          description: Number of conversations on one page. Max 20.
        - in: query
          name: locale
          schema:
            type: string
            enum: [zh-CN, id-ID, ms-MY, th-TH, vi-VN, en, en-GB]
          description: System message's display language.
      responses:
        '200':
          description: A list of conversations between buyers and a shop.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      next_page_token:
                        type: string
                        example: 1612353423
                      conversations:
                        type: array
                        items:
                          $ref: '#/components/schemas/Conversation'
    post:
      summary: Create a conversation with a buyer
      operationId: createConversation
      tags:
        - Customer Service
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buyer_user_id:
                  type: string
                  example: "7494560109732338459"
              required:
                - buyer_user_id
              description: The buyer's user ID. User_id in Customer Service API is the same as the buyer_user_id in Order API. This allows fetching orders of a buyer who reached out via chat.
      responses:
        '200':
          description: Successfully created or fetched an existing conversation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      conversation_id:
                        type: string
                        example: "7106888323922608389"
                    description: The unique identifier for a conversation between the buyer and the shop. This endpoint is idempotent, meaning multiple calls with the same buyer_user_id will return the same conversation ID.                               
  /customer_service/202309/agents/settings:
    get:
      summary: Get agent settings
      operationId: getAgentSettings
      tags:
        - Customer Service
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      responses:
        '200':
          description: >
            Successfully retrieved the agent settings indicating whether the agent can accept chats from buyers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      can_accept_chat:
                        type: boolean
                        example: true
                        description: >
                          Whether the current agent can accept chat. If true, the agent will receive auto-assigned chats and can manually select chats to respond. If false, the agent will receive manually assigned chats only.
    put:
      summary: Update agent settings
      operationId: updateAgentSettings
      tags:
        - Customer Service
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - can_accept_chat
              properties:
                can_accept_chat:
                  type: boolean
                  example: true
                  description: >
                    If true, the agent will receive auto-assigned chats and can manually select chats to respond. If false, the agent will receive manually assigned chats only. It is recommended to set this field to true for using IM API.
      responses:
        '200':
          description: >
            Successfully updated the agent settings, reflecting whether they can accept auto-assigned chats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    description: >
                      The response body will be empty as the main outcome is the success message and code.
  /customer_service/202309/images/upload:
    post:
      summary: Upload an image for buyer messages
      operationId: uploadBuyerMessagesImage
      tags:
        - Customer Service
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeMultipartFormData'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: string
                  format: binary
                  description: >
                    Image file to upload. The image format must be JPEG, JPG, PNG, GIF, or WEBP. The image size cannot exceed 10MB. The maximum pixels (width*height) is 1000000000.
      responses:
        '200':
          description: Successfully uploaded the image and returned the URL for message sending.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    properties:
                      url:
                        type: string
                        example: "https://p16-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/2ca53c34ad8443e6b39f4e0153d3aed4~tplv-o3syd03w52-origin-image.image?from=1320446476"
                        description: URL of the uploaded image.
                      width:
                        type: integer
                        example: 1280
                        description: Width of the uploaded image.
                      height:
                        type: integer
                        example: 720
                        description: Height of the uploaded image.
  /customer_service/202309/conversations/{conversation_id}/messages/read:
    post:
      summary: Mark all buyer's messages as read in a conversation
      operationId: readMessage
      tags:
        - Customer Service
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
          description: The unique identifier of a conversation between a buyer and a shop.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              description: This endpoint does not require a body to mark messages as read.
      responses:
        '200':
          description: Successfully marked all messages as read.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Success
                  request_id:
                    type: string
                    example: 202203070749000101890810281E8C70B7
                  data:
                    type: object
                    description: Specific return information, this endpoint does not return any additional data upon success.
  /supply_chain/202309/packages/sync:
    post:
      summary: Confirm Package Shipment
      description: |
        Allows certified warehouse service providers to send back package information for transaction orders.
      operationId: confirmPackageShipment
      tags:
        - Supply Chain
      parameters:
        - $ref: '#/components/parameters/shopCipher'
        - $ref: '#/components/parameters/appKey'
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/timestamp'
        - $ref: '#/components/parameters/sign'
        - $ref: '#/components/parameters/xTtsAccessToken'
        - $ref: '#/components/parameters/contentTypeApplicationJson'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                warehouse_provider_id:
                  type: string
                  description: "Unique identifier for the warehouse provider, provided by TikTok."
                  example: "7342984797904049750"
                packages:
                  type: array
                  description: "List of packages to be confirmed."
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: "Unique identifier for the package."
                        example: "28427944530283"
                      wms_order_id:
                        type: string
                        description: "Warehouse Management System order number."
                        example: "324246554745"
                      provider_warehouse_code:
                        type: string
                        description: "Code of the warehouse from the provider."
                        example: "7475973290484254255"
                      shipping_origin_city:
                        type: string
                        description: "Name of the city from where the goods are shipped."
                        example: "CityA"
                      time_zone:
                        type: string
                        description: "Time zone of the shipping origin."
                        example: "UTC+8"
                      ship_time_millis:
                        type: integer
                        description: "Timestamp (milliseconds) when the goods are shipped out of the warehouse."
                        example: 1694176625765
                      create_time_millis:
                        type: integer
                        description: "Timestamp (milliseconds) when the warehouse receives the order."
                        example: 1694176625765
                      handover_time_millis:
                        type: integer
                        description: "Timestamp (milliseconds) for the handover time."
                        example: 1694176625765
                      shipping_provider_id:
                        type: string
                        description: "Unique identifier for the shipping service provider."
                        example: "2435653524354624"
                      shipping_provider_name:
                        type: string
                        description: "Name of the shipping service provider."
                        example: "ProviderA"
                      tracking_number:
                        type: string
                        description: "Tracking number for the package."
                        example: "WB53452356"
                      dimension:
                        $ref: '#/components/schemas/PackageShipmentDimension'
                      weight:
                        $ref: '#/components/schemas/PackageShipmentWeight'
                      skus:
                        type: array
                        description: "List of SKUs in the package."
                        items:
                          $ref: '#/components/schemas/PackageShipmentSku'
      responses:
        '200':
          description: Package information successfully processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: "API response code where 0 indicates success."
                    example: 0
                  message:
                    type: string
                    description: "API response message."
                    example: "Success"
                  request_id:
                    type: string
                    description: "Unique identifier for the request."
                    example: "202203070749000101890810281E8C70B7"
                  data:
                    type: object
                    properties:
                      success_packages:
                        type: array
                        items:
                          type: string
                        description: "List of package IDs that were successfully processed."
                        example: ["5345241234", "42365346"]
                      errors:
                        type: array
                        items:
                          $ref: '#/components/schemas/PackageShipmentErrorDetail'
                        description: "List of errors for packages that couldn't be processed."

components:
  parameters:
    shopCipher:
      in: query
      name: shop_cipher
      required: true
      schema:
        type: string
      description: Use this property to pass shop information in requesting the API. Failure in passing the correct value when requesting the API for cross-border shops will return an incorrect response.
    appKey:
      in: query
      name: app_key
      required: true
      schema:
        type: string
    appSecret:
      in: query
      name: app_secret
      required: true
      schema:
        type: string
    accessToken:
      in: query
      name: access_token
      required: true
      schema:
        type: string
    timestamp:
      in: query
      name: timestamp
      required: true
      schema:
        type: string
    sign:
      in: query
      name: sign
      required: true
      schema:
        type: string
    xTtsAccessToken:
      in: header
      name: x-tts-access-token
      required: true
      schema:
        type: string
    contentTypeApplicationJson:
      in: header
      name: content-type
      required: true
      schema:
        type: string
        default: application/json
    contentTypeMultipartFormData:
      in: header
      name: content-type
      required: true
      schema:
        type: string
        default: multipart/form-data
  
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        request_id:
          type: string
    TokenResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: 'success'
        data:
          type: object
          properties:
            access_token:
              type: string
              example: 'ROW_Fw8rBwAAAAAkW03FYd09DG-9INtpw361hWthei8S3fHX8iPJ5AUv99fLSCYD9-UucaqxTgNRzKZxi5-tfFMtdWqglEt5_iCk'
            access_token_expire_in:
              type: integer
              example: 1660556783
            refresh_token:
              type: string
              example: 'NTUxZTNhYTQ2ZDk2YmRmZWNmYWY2YWY2YzkxNGYwNjQ3YjkzYTllYjA0YmNlMw'
            refresh_token_expire_in:
              type: integer
              example: 1691487031
            open_id:
              type: string
              example: '7010736057180325637'
            seller_name:
              type: string
              example: 'Jjj test shop'
            seller_base_region:
              type: string
              example: 'ID'
            user_type:
              type: integer
              example: 0
    AuthorizedShopsResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        data:
          type: object
          properties:
            shops:
              type: array
              items:
                $ref: '#/components/schemas/ShopDetails'
    WebhookResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        request_id:
          type: string
        data:
          type: object
          properties:
            total_count:
              type: integer
            webhooks:
              type: array
              items:
                $ref: '#/components/schemas/WebhookDetails'
    UpdateWebhookResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        request_id:
          type: string
        data:
          type: object
          description: Contains information about the update operation, if applicable.
    ShopDetails:
      type: object
      properties:
        id:
          type: string
          description: TikTok Shop ID.
        name:
          type: string
          description: Name of the TikTok Shop.
        region:
          type: string
          description: Region of the shop. Note that the region may be empty in certain seller status cases.
        seller_type:
          type: string
          enum: [CROSS_BORDER, LOCAL]
          description: >
            Type of seller:
            - `CROSS_BORDER`: Indicates a seller operating across borders.
            - `LOCAL`: Indicates a local seller within a single market.
        cipher:
          type: string
          description: Encrypted shop information used in API requests. Required for cross-border shops and optional for local shops.
        code:
          type: string
          description: Unique code assigned to the TikTok Shop.
    WebhookDetails:
      type: object
      properties:
        event_type:
          type: string
          enum:
            - ORDER_STATUS_CHANGE
            - CANCELLATION_STATUS_CHANGE
            - RETURN_STATUS_CHANGE
            - RECIPIENT_ADDRESS_UPDATE
            - PACKAGE_UPDATE
            - PRODUCT_STATUS_CHANGE
            - SELLER_DEAUTHORIZATION
            - UPCOMING_AUTHORIZATION_EXPIRATION
            - PRODUCT_INFORMATION_CHANGE
          description: >
            The event type of the webhook:
            - `ORDER_STATUS_CHANGE`: Each order status update starting from new order placement to all the subsequent order status will trigger this push.
            - `CANCELLATION_STATUS_CHANGE`: When the cancel order status changes, it will trigger this push.
            - `RETURN_STATUS_CHANGE`: When the return order status changes, it will trigger this push.
            - `RECIPIENT_ADDRESS_UPDATE`: When receiver address is updated, it will trigger this push.
            - `PACKAGE_UPDATE`: When the package is updated, such as being combined, split or address updated etc., it will trigger this push.
            - `PRODUCT_STATUS_CHANGE`: When product audit results are updated, this type of push will be triggered.
            - `SELLER_DEAUTHORIZATION`: After a seller is deauthorized, the platform needs to notify developers via webhook push to avoid developers misunderstanding that there is a problem with the platform authorization function.
            - `UPCOMING_AUTHORIZATION_EXPIRATION`: The platform triggers a webhook push to developer 30 days before the authorization automatically expires, and pushes the message to developer once a day at 0:00 before the seller completes the re-authorization.
            - `PRODUCT_INFORMATION_CHANGE`: This webhook triggers a notification when changes to a product's title, description, main images, or attributes become effective online.
        address:
          type: string
          description: The webhook URL used to receive this event type.
        create_time:
          type: integer
          description: The Unix timestamp when this webhook was created.
        update_time:
          type: integer
          description: The Unix timestamp when this webhook was last updated.
    DeleteWebhookResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        request_id:
          type: string
        data:
          type: object
          description: Contains information about the deletion operation, if applicable.
    SellerPermissionsResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            permissions:
              type: array
              items:
                type: string
              example: ["MANAGE_GLOBAL_PRODUCT"]
              description: >
                The operations the seller has permission to perform. Each element in the array represents an operation. For example,
                MANAGE_GLOBAL_PRODUCT indicates that the seller has the privilege to manage global products. At present, the only available
                operation is MANAGE_GLOBAL_PRODUCT. If the seller has no permissions, this field will return an empty array.
    ActiveShopsResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            shops:
              type: array
              items:
                $ref: '#/components/schemas/Shop'
    Shop:
      type: object
      properties:
        id:
          type: string
          example: "36123502970007"
          description: The ID of the shop.
        region:
          type: string
          example: "GB"
          description: The region/market of the shop.
    AuditFailedReason:
      type: object
      properties:
        position:
          type: string
          example: product
          description: Position of the audit failure.
        reasons:
          type: array
          items:
            type: string
          example: ["violate listing rules"]
          description: Brief reason for the audit failure.
        suggestions:
          type: array
          items:
            type: string
          example: ["The product violates TikTok Shopping listing rules, please check and resubmit."]
          description: Detailed reasons for audit failure.
    BrandsResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            brands:
              type: array
              items:
                $ref: '#/components/schemas/Brand'
            total_count:
              type: integer
              example: 10000
            next_page_token:
              type: string
              example: b2Zmc2V0PTAK
    Brand:
      type: object
      properties:
        id:
          type: string
          example: "7082427311584347905"
        name:
          type: string
          example: "Teas"
        authorized_status:
          type: string
          example: "UNAUTHORIZED"
          enum: [AUTHORIZED, UNAUTHORIZED]
        is_t1_brand:
          type: boolean
          example: true
        brand_status:
          type: string
          example: "AVAILABLE"
          enum: [AVAILABLE, UNAVAILABLE]
    CreateBrandResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            id:
              type: string
              description: Return the ID of the successfully created brand, which can be used for creating products.
              example: "7082427311584347905"
    CategoriesResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        request_id:
          type: string
        data:
          type: object
          properties:
            categories:
              type: array
              items:
                $ref: '#/components/schemas/Category'
    Category:
      type: object
      properties:
        id:
          type: string
        parent_id:
          type: string
        local_name:
          type: string
        is_leaf:
          type: boolean
        permission_statuses:
          type: array
          items:
            type: string
            enum: [AVAILABLE, INVITE_ONLY, NON_MAIN_CATEGORY]
    CategoryRulesResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        request_id:
          type: string
        data:
          type: object
          properties:
            product_certifications:
              type: array
              items:
                $ref: '#/components/schemas/ProductCertification'
            size_chart:
              $ref: '#/components/schemas/SizeChart'
            cod:
              $ref: '#/components/schemas/CODRules'
            package_dimension:
              $ref: '#/components/schemas/PackageDimension'
    Certification:
      type: object
      properties:
        id:
          type: string
          example: 602362
          description: Product certification id.
        title:
          type: string
          example: SNI Certificate
          description: The title of product certification.
        files:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: v09ea0g40000cj91373c77u3mid3g1s0
                description: Certification file id.
              urls:
                type: array
                items:
                  type: string
                example: ["https://p16-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/6c8519a3663a4d728c4e3c131dc914b4~tplv-o3syd03w52-resize-jpeg:300:300.jpeg?from=522366036"]
                description: Certification file url list.
              name:
                type: string
                example: CERT_X2.PDF
                description: The name of the certification file.
              format:
                type: string
                example: PDF
                description: File format, currently only supports PDF.
        images:
          type: array
          items:
            type: object
            properties:
              height:
                type: integer
                example: 600
                description: Height of the product certification in pixels.
              width:
                type: integer
                example: 600
                description: Width of the product certification in pixels.
              thumb_urls:
                type: array
                items:
                  type: string
                example: ["https://p16-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/6c8519a3663a4d728c4e3c131dc914b4~tplv-o3syd03w52-resize-jpeg:300:300.jpeg?from=522366036"]
                description: Links, or URLs, for the product certification thumbnail.
              uri:
                type: string
                example: tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe
                description: Certification image URI.
              urls:
                type: array
                items:
                  type: string
                example: ["https://p16-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/6c8519a3663a4d728c4e3c131dc914b4~tplv-o3syd03w52-resize-jpeg:300:300.jpeg?from=522366036"]
                description: Links, or URLs, for the certification image.
    DeliveryOption:
      type: object
      properties:
        id:
          type: string
          example: 1729592969712203232
          description: Delivery logistics service id.
        name:
          type: string
          example: ""
          description: Delivery logistics service name.
        is_available:
          type: boolean
          example: true
          description: This is the status of the delivery service option, indicating whether the delivery service is available on the current product.
    Image:
      type: object
      properties:
        height:
          type: integer
          example: 600
          description: Height of the image in pixels.
        width:
          type: integer
          example: 600
          description: Width of the image in pixels.
        thumb_urls:
          type: array
          items:
            type: string
          example: ["https://p16-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/6c8519a3663a4d728c4e3c131dc914b4~tplv-o3syd03w52-resize-jpeg:300:300.jpeg?from=522366036"]
          description: Links, or URLs, for the image thumbnail.
        uri:
          type: string
          example: tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe
          description: Product main image ID.
        urls:
          type: array
          items:
            type: string
          example: ["https://p16-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/6c8519a3663a4d728c4e3c131dc914b4~tplv-o3syd03w52-resize-jpeg:300:300.jpeg?from=522366036"]
          description: Links, or URLs, for the image, which can be used to access the image.
    ProductCertification:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        is_required:
          type: boolean
        sample_image_url:
          type: string
    SizeChart:
      type: object
      properties:
        is_supported:
          type: boolean
        is_required:
          type: boolean
    CODRules:
      type: object
      properties:
        is_supported:
          type: boolean
    PackageDimension:
      type: object
      properties:
        is_required:
          type: boolean
    AttributesResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: "Success"
        request_id:
          type: string
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            attributes:
              type: array
              items:
                $ref: '#/components/schemas/AttributeDetail'
              example: 
                - id: "100392"
                  name: "Occasion"
                  type: "PRODUCT_PROPERTY"
                  is_required: false
                  is_customizable: true
                  is_multiple_selection: true
                  values:
                    - id: "1001533"
                      name: "Birthday"
    AttributeDetail:
      type: object
      properties:
        id:
          type: string
          example: "100392"
        name:
          type: string
          example: "Occasion"
        type:
          type: string
          enum: [PRODUCT_PROPERTY, SALES_PROPERTY]
          example: "PRODUCT_PROPERTY"
        is_required:
          type: boolean
          example: false
        is_customizable:
          type: boolean
          example: true
        is_multiple_selection:
          type: boolean
          example: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueDetail'
    AttributeValueDetail:
      type: object
      properties:
        id:
          type: string
          example: "1001533"
        name:
          type: string
          example: "Birthday"
    RecommendCategoryResponse:
        type: object
        properties:
          code:
            type: integer
            example: 0
          message:
            type: string
            example: "Success"
          request_id:
            type: string
            example: "202203070749000101890810281E8C70B7"
          data:
            type: object
            properties:
              leaf_category_id:
                type: string
                example: "605254"
              categories:
                type: array
                items:
                  $ref: '#/components/schemas/RecommendedCategory'
    RecommendedCategory:
        type: object
        properties:
          id:
            type: string
            example: "605254"
          name:
            type: string
            example: "Teas"
          level:
            type: integer
            example: 1
          is_leaf:
            type: boolean
            example: true
          permission_statuses:
            type: array
            items:
              type: string
            example: ["INVITE_ONLY"]
    UploadImageResponse:
        type: object
        properties:
          code:
            type: integer
            example: 0
          message:
            type: string
            example: "Success"
          request_id:
            type: string
            example: "202203070749000101890810281E8C70B7"
          data:
            type: object
            properties:
              uri:
                type: string
                example: "tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
              url:
                type: string
                example: "https://p-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
              height:
                type: integer
                example: 720
              width:
                type: integer
                example: 720
              use_case:
                type: string
                example: "MAIN_IMAGE"
    UploadFileResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: "Success"
        request_id:
          type: string
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            id:
              type: string
              example: "v09e40f40000cfu0ovhc77ub7fl97k4w"
            url:
              type: string
              example: "https://p-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
            name:
              type: string
              example: "SNI.PDF"
            format:
              type: string
              example: "PDF"
    CreateProductRequest:
      type: object
      properties:
        save_mode:
          type: string
          enum:
            - AS_DRAFT
            - LISTING
          example: LISTING
        description:
          type: string
          example: "<p>Detailed product description with <strong>HTML tags</strong>.</p>"
        category_id:
          type: string
          example: "600001"
        brand_id:
          type: string
          example: "7082427311584347905"
        main_images:
          type: array
          items:
            type: object
            properties:
              uri:
                type: string
                example: "tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
        skus:
          type: array
          items:
            type: object
            properties:
              inventory:
                type: array
                items:
                  type: object
                  properties:
                    warehouse_id:
                      type: string
                      example: "7068517275539719942"
                    quantity:
                      type: integer
                      example: 999
              price:
                type: object
                properties:
                  amount:
                    type: string
                    example: "1.21"
                  currency:
                    type: string
                    enum: [USD, GBP, EUR]
                    example: USD
              sales_attributes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "100089"
                    value_id:
                      type: string
                      example: "1729592969712207000"
                    value_name:
                      type: string
                      example: "Red"
                    sku_img:
                      type: object
                      properties:
                        uri:
                          type: string
                          example: "tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
        title:
          type: string
          example: "Men's Fashion Sports Low Cut Cotton Breathable Ankle Short Boat Invisible Socks"
        is_cod_allowed:
          type: boolean
          example: false
        certifications:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "7182427311584347905"
              images:
                type: array
                items:
                  type: object
                  properties:
                    uri:
                      type: string
                      example: "tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
              files:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "v09ea0g40000cj91373c77u3mid3g1s0"
                    name:
                      type: string
                      example: "brand_cert.PDF"
                    format:
                      type: string
                      example: PDF
        package_dimensions:
          type: object
          properties:
            length:
              type: string
              description: "Package length in specified unit."
              example: "10"
            width:
              type: string
              description: "Package width in specified unit."
              example: "10"
            height:
              type: string
              description: "Package height in specified unit."
              example: "10"
            unit:
              type: string
              enum: [CENTIMETER, INCH]
              description: "Unit of package dimension measurement."
              example: "CENTIMETER"
        product_attributes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "100392"
              values:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "1001533"
                    name:
                      type: string
                      example: "Birthday"
        package_weight:
          type: object
          description: "Weight of the product package, affecting shipping costs and logistics."
          properties:
            value:
              type: string
              description: "Weight of the package."
              example: "1.32"
            unit:
              type: string
              enum: [KILOGRAM, POUND]
              description: "Unit of weight measurement."
              example: "KILOGRAM"
        video:
          type: object
          properties:
            id:
              type: string
              description: "ID of the uploaded video file. Use the 'Upload File' API to upload video files."
              example: "v09e40f40000cfu0ovhc77ub7fl97k4w"
        external_product_id:
          type: string
          example: "172959296971220002"
        delivery_option_ids:
          type: array
          items:
            type: string
          example: ["1729592969712203232"]
        size_chart:
          type: object
          properties:
            image:
              type: object
              properties:
                uri:
                  type: string
                  example: "tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
            template:
              type: object
              properties:
                id:
                  type: string
                  example: "7267563252536723205"
    CreateProductResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: "Success"
        data:
          type: object
          properties:
            product_id:
              type: string
              example: "1729592969712207008"
            skus:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: "1729592969712207012"
                  seller_sku:
                    type: string
                    example: "Color-Red-XM001"
    PartialEditProductRequest:
          type: object
          properties:
            description:
              type: string
              example: "<p>Updated product description with HTML support.</p>"
            brand_id:
              type: string
              example: "7082427311584347905"
            main_images:
              type: array
              items:
                type: object
                properties:
                  uri:
                    type: string
                    example: "tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
            skus:
              type: array
              items:
                $ref: '#/components/schemas/PartialEditProductSkuRequest'
    PartialEditProductSkuRequest:
          type: object
          properties:
            id:
              type: string
              example: "1729592969712207012"
            sales_attributes:
              type: array
              items:
                $ref: '#/components/schemas/PartialEditProductSalesAttributeRequest'
            price:
              type: object
              properties:
                amount:
                  type: string
                  example: "10.99"
                currency:
                  type: string
                  example: "USD"
            inventory:
              type: array
              items:
                $ref: '#/components/schemas/PartialEditProductInventoryRequest'
    PartialEditProductSalesAttributeRequest:
          type: object
          properties:
            id:
              type: string
              description: "The ID of the sales attribute."
              example: "100089"
            value_id:
              type: string
              description: "The value ID for the sales attribute."
              example: "1029384756"
            value_name:
              type: string
              description: "The name of the sales attribute value."
              example: "XL"
    PartialEditProductInventoryRequest:
          type: object
          properties:
            warehouse_id:
              type: string
              example: "7068517275539719942"
            quantity:
              type: integer
              example: 100
    PartialEditProductResponse:
        type: object
        properties:
          code:
            type: integer
            description: "The success or failure status code returned in API response."
            example: 0
          message:
            type: string
            description: "The success or failure messages returned in API response. Reasons of failure will be described in the message."
            example: "Success"
          request_id:
            type: string
            description: "Unique identifier for the request, useful for debugging."
            example: "202203070749000101890810281E8C70B7"
          data:
            type: object
            description: "Contains the specific return information."
            properties:
              product_id:
                type: string
                description: "This is a unique product id generated by the system, used to manage the product."
                example: "1729592969712207008"
              skus:
                type: array 
                description: "Array of SKU information."
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: "This is a unique sku id generated by the system, used to manage the SKU under the product."
                      example: "1729592969712207012"
                    seller_sku:
                      type: string
                      description: "The seller specified SKU, used to identify and manage SKUs."
                      example: "seller sku xxaa"
                    sales_attributes:
                      type: array
                      description: "Details of sales attributes, empty if not filled in."
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: "The sales attribute id filled in by the seller or generated by the platform based on attribute_name."
                            example: "100000"
                          value_id:
                            type: string
                            description: "The sales attribute value id filled in by the seller or generated by the platform based on custom_value."
                            example: "1729592969712207123"
                    external_sku_id:
                      type: string
                      description: "The external_sku_id is used to associate product SKU between TikTok Shop and the external system."
                      example: "1729592969712207012"
    ProductAttribute:
      type: object
      properties:
        id:
          type: string
          example: 100392
          description: The product attribute id.
        name:
          type: string
          example: Occasion
          description: The product attribute name.
        values:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: 1001533
                description: Specify product attribute value ID.
              name:
                type: string
                example: Birthday
                description: The product attribute value name.
    EditProductRequest:
      type: object
      required:
        - description
        - category_id
        - main_images
        - skus
        - title
        - package_weight
      properties:
        description:
          type: string
          description: >
            HTML rich text of a product description. Supports limited HTML tags for formatting. Must conform to HTML syntax with character limit within 10,000 characters. Only TikTok Shop image URLs are allowed, no external URLs.
          example: >
            <p>Please compare above detailed size with your measurement before purchase.</p>
            <ul>
            <li>M-Size</li>
            <li>XL-Size</li>
            </ul>
            <img src="https://example.com/image.jpg" width="100" height="100" />
        category_id:
          type: string
          description: "Leaf Category ID. Leaf Categories do not have sub-categories. Using a non-Leaf Category ID will result in request rejection."
          example: "600001"
        brand_id:
          type: string
          description: "Brand ID as returned by the 'Get Brands' API. Unauthorized brands are used for statistical purposes only and won't be displayed to customers."
          example: "7082427311584347905"
        main_images:
          type: array
          description: "Array of main product images. Use image URIs returned by the 'Upload Image' API."
          items:
            type: object
            properties:
              uri:
                type: string
                description: "The image URI returned by the 'Upload Image' API."
                example: "tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
        skus:
          type: array
          description: "Contains details of the product SKUs, including sales attributes and inventory."
          items:
            $ref: '#/components/schemas/EditProductSkuRequest'
        title:
          type: string
          description: "Product title with a minimum of 1 character and a maximum of 255 characters."
          example: "Men's Fashion Sports Low Cut Cotton Breathable Ankle Short Boat Invisible Socks"
        is_cod_allowed:
          type: boolean
          description: "Indicates if COD (Cash On Delivery) is allowed for this product. Subject to category restrictions."
          example: false
        certifications:
          type: array
          description: "Array of product certifications required based on the product category."
          items:
            $ref: '#/components/schemas/EditProductCertificationRequest'
        package_weight:
          type: object
          description: "Weight of the product package, affecting shipping costs and logistics."
          properties:
            value:
              type: string
              description: "Weight of the package."
              example: "1.32"
            unit:
              type: string
              enum: [KILOGRAM, POUND]
              description: "Unit of weight measurement."
              example: "KILOGRAM"
        external_product_id:
          type: string
          description: "Product identifier in an external system."
          example: "172959296971220002"
        delivery_option_ids:
          type: array
          items:
            type: string
          description: "Array of delivery option IDs. If not specified, defaults to standard delivery options."
          example: ["1729592969712203232"]
        video:
          type: object
          properties:
            id:
              type: string
              description: "ID of the uploaded video file. Use the 'Upload File' API to upload video files."
              example: "v09e40f40000cfu0ovhc77ub7fl97k4w"
        size_chart:
          type: object
          properties:
            image:
              type: object
              properties:
                uri:
                  type: string
                  description: "URI of the uploaded size chart image. Use the 'Upload Image' API."
                  example: "tos-maliva-i-o3syd03w52-us/sizechart.jpg"
            template:
              type: object
              properties:
                id:
                  type: string
                  description: "ID of a pre-generated size chart template."
                  example: "7267563252536723205"
        package_dimensions:
          type: object
          properties:
            length:
              type: string
              description: "Package length in specified unit."
              example: "10"
            width:
              type: string
              description: "Package width in specified unit."
              example: "10"
            height:
              type: string
              description: "Package height in specified unit."
              example: "10"
            unit:
              type: string
              enum: [CENTIMETER, INCH]
              description: "Unit of package dimension measurement."
              example: "CENTIMETER"
    EditProductSkuRequest:
              type: object
              properties:
                id:
                  type: string
                  description: "Optional. The ID of the SKU to edit. If provided, edits an existing SKU. Omit to create a new SKU."
                  example: "1729592969712207012"
                sales_attributes:
                  type: array
                  items:
                    $ref: '#/components/schemas/SalesAttribute'
                  description: "Array of sales attributes for the SKU."
                price:
                  $ref: '#/components/schemas/Price'
                inventory:
                  type: array
                  items:
                    $ref: '#/components/schemas/Inventory'
                  description: "Inventory details for the SKU."
                seller_sku:
                  type: string
                  description: "Optional. A unique identifier for the SKU set by the seller."
                  example: "SKU12345"
                external_sku_id:
                  type: string
                  description: "Optional. An external identifier for the SKU, useful for integration purposes."
                  example: "EXTSKU12345"
    SalesAttribute:
          type: object
          properties:
            id:
              type: string
              description: "ID of the sales attribute. Obtainable through the 'Get Attributes' API."
              example: "100089"
            name:
              type: string
              description: "Name of the sales attribute."
              example: "Color"
            value_id:
              type: string
              description: "ID of the sales attribute value. Optional if a new value is being added."
              example: "200001"
            value_name:
              type: string
              description: "Name of the sales attribute value. Required if adding a new value."
              example: "Red"
            sku_img:
              $ref: '#/components/schemas/ImageUri'
    ImageUri:
          type: object
          properties:
            uri:
              type: string
              description: "URI of the image, returned by the 'Upload Image' API."
              example: "tos-maliva-i-o3syd03w52-us/c668cdf70b7f483c94dbe"
    Price:
          type: object
          properties:
            amount:
              type: string
              description: "Price of the SKU. Must be a positive number."
              example: "19.99"
            currency:
              type: string
              enum: [USD, GBP, EUR]
              description: "Currency code for the price."
              example: "USD"
    Inventory:
          type: object
          properties:
            warehouse_id:
              type: string
              description: "ID of the warehouse where the inventory is stored."
              example: "7068517275539719942"
            quantity:
              type: integer
              description: "Quantity of the SKU in stock."
              example: 100
    EditProductCertificationRequest:
          type: object
          properties:
            id:
              type: string
              description: "Certification ID as required by the product's category."
              example: "7182427311584347905"
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageUri'
              description: "Array of certification images."
            files:
              type: array
              items:
                $ref: '#/components/schemas/File'
              description: "Array of certification files."
    File:
          type: object
          properties:
            id:
              type: string
              description: "ID of the file, returned by the 'Upload File' API."
              example: "v09e40f40000cfu0ovhc77ub7fl97k4w"
            name:
              type: string
              description: "Name of the uploaded file."
              example: "Certification.pdf"
            format:
              type: string
              description: "Format of the file."
              example: "PDF"
    ProductResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: Success
          description: The success or failure messages returned in API response. Reasons of failure will be described in the message.
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
          description: Request log
        data:
          type: object
          description: Specific return information
          properties:
            id:
              type: string
              example: 1729592969712207008
              description: The unique ID of the product.
            status:
              type: string
              example: SELLER_DEACTIVATED
              enum: [ALL, DRAFT, PENDING, FAILED, ACTIVATE, SELLER_DEACTIVATED, PLATFORM_DEACTIVATED, FREEZE, DELETED]
              description: The status of the target product.
            title:
              type: string
              example: Short Boat Invisible Socks
              description: The name of the product.
            category_chains:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: 853000
                    description: The category id.
                  parent_id:
                    type: string
                    example: 851848
                    description: The parent category id. The parent category ID of the first-level category is "0".
                  local_name:
                    type: string
                    example: Botol & Stoples Penyimpanan
                    description: The name of the category in the country where the shop operates.
                  is_leaf:
                    type: boolean
                    example: true
                    description: Indicates whether the category is a leaf category.
            brand:
              type: object
              properties:
                id:
                  type: string
                  example: 7082427311584347905
                  description: The brand id.
                name:
                  type: string
                  example: brand xxx aaa
                  description: The brand name.
            main_images:
              type: array
              items:
                $ref: '#/components/schemas/Image'
              description: Main image of the product. Up to 9 images.
            video:
              type: object
              properties:
                id:
                  type: string
                  example: v09e40f40000cfu0ovhc77ub7fl97k4w
                  description: ID of the uploaded video file. Use the 'Upload File' API to upload video files.
              description: Product video information.
            description:
              type: string
              example: Please compare above detailed size with your measurement before purchase.\n\n* M-Size\n\n* XL-Size\n\n图片
              description: The description of the product, complete with HTML formatting.
            package_dimensions:
              type: object
              properties:
                length:
                  type: string
                  example: "10"
                  description: Package length in specified unit.
                width:
                  type: string
                  example: "10"
                  description: Package width in specified unit.
                height:
                  type: string
                  example: "10"
                  description: Package height in specified unit.
                unit:
                  type: string
                  enum: [CENTIMETER, INCH]
                  example: CENTIMETER
                  description: Unit of package dimension measurement.
            package_weight:
              type: object
              description: Weight of the product package, affecting shipping costs and logistics.
              properties:
                value:
                  type: string
                  example: "1.32"
                  description: Weight of the package.
                unit:
                  type: string
                  enum: [KILOGRAM, POUND]
                  example: KILOGRAM
                  description: Unit of weight measurement.
            skus:
              type: array
              items:
                $ref: '#/components/schemas/Sku'
              description: Product SKU list. This list will be empty if the product has no sku.
            certifications:
              type: array
              items:
                $ref: '#/components/schemas/Certification'
              description: Product certification information.
            size_chart:
              $ref: '#/components/schemas/SizeChart'
              description: Size chart on Tiktok Shop.
            is_cod_allowed:
              type: boolean
              example: true
              description: Indicates whether the product is cod enabled.
            product_attributes:
              type: array
              items:
                $ref: '#/components/schemas/ProductAttribute'
              description: Product attributes of Tiktok Shop.
            audit_failed_reasons:
              type: array
              items:
                $ref: '#/components/schemas/AuditFailedReason'
              description: Reasons for audit failure.
            update_time:
              type: integer
              example: 1234567899
              description: The time when the product status is updated.
            create_time:
              type: integer
              example: 1234567890
              description: The time when the product is created.
            delivery_options:
              type: array
              items:
                $ref: '#/components/schemas/DeliveryOption'
              description: Delivery option information associated with the product.
            external_product_id:
              type: string
              example: 172959296971220002
              description: The external_product_id is the product identifier for the external system. It is used to associate it with the product. The input character length can not exceed 999.
    InventorySearchResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            inventory:
              type: array
              items:
                $ref: '#/components/schemas/InventoryDetail'
    InventoryDetail:
      type: object
      properties:
        product_id:
          type: string
          example: 1729592969712207008
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuInventory'
    SkuInventory:
      type: object
      properties:
        id:
          type: string
          example: 1729388324987897824
        seller_sku:
          type: string
          example: Color-Red-XM01
        total_available_quantity:
          type: integer
          example: 100
        total_committed_quantity:
          type: integer
          example: 10
        warehouse_inventory:
          type: array
          items:
            $ref: '#/components/schemas/WarehouseInventory'
    WarehouseInventory:
      type: object
      properties:
        warehouse_id:
          type: string
          example: 7054915283043174149
        available_quantity:
          type: integer
          example: 100
        committed_quantity:
          type: integer
          example: 10
    CheckListingPrerequisitesResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            check_results:
              type: array
              items:
                $ref: '#/components/schemas/CheckResult'
    CheckResult:
      type: object
      properties:
        check_item:
          type: string
          example: RETURN_WAREHOUSE
          description: Currently, the checked items provided by this interface.
        is_failed:
          type: boolean
          example: true
          description: If "is_failed" is true, it indicates that the requirements for listing have not been met.
        fail_reasons:
          type: array
          items:
            type: string
          example: ["Couldn't publish this product as you haven't set the return warehouse for your shop. Add the return warehouse information on TikTok Shop Seller Center first and try again."]
          description: The specific reasons for not being able to list products due to the check_item.
    ListingSchemasResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            listing_schemas:
              type: array
              items:
                $ref: '#/components/schemas/SchemaDetails'
    SchemaDetails:
      type: object
      properties:
        category_id:
          type: integer
          example: 60001
        fields:
          type: array
          items:
            $ref: '#/components/schemas/FieldDetails'
    FieldDetails:
      type: object
      properties:
        id:
          type: string
          example: product_attributes
        name:
          type: string
          example: Product Attributes
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RuleDetails'
        options:
          type: array
          items:
            $ref: '#/components/schemas/OptionDetails'
    RuleDetails:
      type: object
      properties:
        type:
          type: string
          example: REQUIRED
        value:
          type: string
          example: true
    OptionDetails:
      type: object
      properties:
        id:
          type: string
          example: 1001533
        name:
          type: string
          example: Birthday
    OrderSearchCriteria:
      type: object
      properties:
        order_status:
          type: string
          description: "Specific order status to filter by."
        create_time_ge:
          type: integer
          description: "Orders created after or at this Unix timestamp."
        create_time_lt:
          type: integer
          description: "Orders created before this Unix timestamp."
        update_time_ge:
          type: integer
          description: "Orders updated after or at this Unix timestamp."
        update_time_lt:
          type: integer
          description: "Orders updated before this Unix timestamp."
        shipping_type:
          type: string
          description: "Delivery method. Options: TIKTOK, SELLER."
        buyer_user_id:
          type: string
          description: "Filter orders by buyer's user ID."
        is_buyer_request_cancel:
          type: boolean
          description: "Filter orders where the buyer has requested cancellation."
    OrderListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: "Success"
        request_id:
          type: string
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            next_page_token:
              type: string
              example: "6AsPQsUMvH3RkchNUPPh22NROHkE0D8pmq/N5M1kHYcZmtRyv9aVrNv65W7Q6tFA+7D1ud64MPNz5OaT"
            total_count:
              type: integer
              example: 22113
            orders:
              type: array
              items:
                $ref: '#/components/schemas/OrderDetails'
    OrderDetails:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the order within the TikTok Shop."
        buyer_email:
          type: string
          description: "Anonymized email address of the buyer, for communication purposes."
        buyer_message:
          type: string
          description: "Any message or special instructions provided by the buyer at the time of purchase."
        cancellation_initiator:
          type: string
          description: "Indicates who initiated the order cancellation - SELLER, BUYER, or SYSTEM."
        create_time:
          type: integer
          description: "Unix timestamp indicating when the order was created."
        status:
          type: string
          description: "The current status of the order (e.g., UNPAID, AWAITING_SHIPMENT, COMPLETED)."
        fulfillment_type:
          type: string
          description: "Indicates the fulfillment method (e.g., FULFILLMENT_BY_SELLER, FULFILLMENT_BY_TIKTOK)."
        tracking_number:
          type: string
          description: "The tracking number associated with the order's shipment."
        paid_time:
          type: integer
          description: "Unix timestamp indicating when the order was paid."
        payment:
          $ref: '#/components/schemas/OrderPaymentDetails'
        recipient_address:
          $ref: '#/components/schemas/OrderRecipientAddress'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItem'
        shipping_provider:
          type: string
          description: "Name of the shipping provider."
        shipping_provider_id:
          type: string
          description: "Identifier for the shipping provider."
        update_time:
          type: integer
          description: "Unix timestamp for the last update made to the order."
        user_id:
          type: string
          description: "Unique identifier for the user who placed the order."
        warehouse_id:
          type: string
          description: "Identifier of the warehouse from where the order is being shipped."
        delivery_option_name:
          type: string
          description: "Name of the selected delivery option."
        shipping_type:
          type: string
          description: "Method of delivery for the order (e.g., TIKTOK, SELLER)."
        packages:
          type: array
          items:
            $ref: '#/components/schemas/OrderPackageDetails'
        total_count:
          type: integer
          description: "Total number of orders matching the search criteria."
        next_page_token:
          type: string
          description: "A token to retrieve the next page of results, if applicable."
    OrderPaymentDetails:
      type: object
      properties:
        currency:
          type: string
          description: "Currency code for the transaction."
        sub_total:
          type: string
          description: "Subtotal amount of the order before taxes and shipping."
        shipping_fee:
          type: string
          description: "Total shipping fee charged for the order."
        seller_discount:
          type: string
          description: "Discount provided by the seller."
        platform_discount:
          type: string
          description: "Discount provided by the platform."
        total_amount:
          type: string
          description: "Total amount paid by the buyer."
        original_total_product_price:
          type: string
          description: "Total price of products before discounts."
        original_shipping_fee:
          type: string
          description: "Original shipping fee before any discounts."
        shipping_fee_seller_discount:
          type: string
          description: "Discount on the shipping fee provided by the seller."
        shipping_fee_platform_discount:
          type: string
          description: "Discount on the shipping fee provided by the platform."
        tax:
          type: string
          description: "Total tax amount for the order."
        small_order_fee:
          type: string
          description: "Additional fee applied for orders below a certain amount."
        shipping_fee_tax:
          type: string
          description: "Tax applied to the shipping fee."
        product_tax:
          type: string
          description: "Tax applied to the product price."
        retail_delivery_fee:
          type: string
          description: "Retail delivery fee applied to the order."
    OrderRecipientAddress:
      type: object
      properties:
        full_address:
          type: string
          description: "Complete address where the order will be delivered."
        phone_number:
          type: string
          description: "Contact number of the recipient."
        name:
          type: string
          description: "Name of the recipient."
        postal_code:
          type: string
          description: "Postal code for the delivery address."
        region_code:
          type: string
          description: "Region code of the delivery address."
        address_detail:
          type: string
          description: "Detailed part of the address for delivery."
        address_line1:
          type: string
        address_line2:
          type: string
        address_line3:
          type: string
        address_line4:
          type: string
    OrderLineItem:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the line item within the order."
        sku_id:
          type: string
          description: "SKU identifier for the item."
        product_id:
          type: string
          description: "Product identifier for the item."
        product_name:
          type: string
          description: "Name of the product."
        seller_sku:
          type: string
          description: "Seller's SKU code for the product."
        sku_image:
          type: string
          description: "URL of the SKU image."
        sku_name:
          type: string
          description: "Name of the SKU."
        original_price:
          type: string
          description: "Original price of the item."
        sale_price:
          type: string
          description: "Sale price of the item after discounts."
        platform_discount:
          type: string
          description: "Discount provided by the platform on this item."
        seller_discount:
          type: string
          description: "Discount provided by the seller on this item."
    OrderPackageDetails:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the package within the order."
    OrderResponse:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
          request_id:
            type: string
          data:
            type: object
            properties:
              orders:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetail'
    OrderDetail:
      type: object
      required:
        - id
        - status
        - payment
        - recipient_address
        - line_items
      properties:
        id:
          type: string
        cancellation_initiator:
          type: string
        shipping_provider:
          type: string
        shipping_provider_id:
          type: string
        create_time:
          type: integer
        status:
          type: string
        payment:
          $ref: '#/components/schemas/PaymentDetail'
        recipient_address:
          $ref: '#/components/schemas/RecipientAddress'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        fulfillment_type:
          type: string
        tracking_number:
          type: string
        paid_time:
          type: integer
        seller_note:
          type: string
        packages:
          type: array
          items:
            $ref: '#/components/schemas/PackageDetail'
    PaymentDetail:
      type: object
      properties:
        currency:
          type: string
        sub_total:
          type: string
        shipping_fee:
          type: string
        total_amount:
          type: string
        tax:
          type: string
        original_total_product_price:
          type: string
        original_shipping_fee:
          type: string
        seller_discount:
          type: string
        platform_discount:
          type: string
        shipping_fee_tax:
          type: string
        product_tax:
          type: string
        retail_delivery_fee:
          type: string
    RecipientAddress:
      type: object
      properties:
        full_address:
          type: string
        phone_number:
          type: string
        name:
          type: string
        postal_code:
          type: string
        address_line1:
          type: string
        address_line2:
          type: string
        district_info:
          type: array
          items:
            $ref: '#/components/schemas/DistrictInfo'
    LineItem:
      type: object
      properties:
        id:
          type: string
        sku_id:
          type: string
        product_id:
          type: string
        product_name:
          type: string
        sku_name:
          type: string
        original_price:
          type: string
        sale_price:
          type: string
        platform_discount:
          type: string
        seller_discount:
          type: string
        sku_image:
          type: string
    PackageDetail:
      type: object
      properties:
        id:
          type: string
        tracking_number:
          type: string
        status:
          type: string
    DistrictInfo:
      type: object
      properties:
        address_level_name:
          type: string
        address_name:
          type: string
        address_level:
          type: string
    SearchPackageResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        request_id:
          type: string
        data:
          type: object
          properties:
            next_page_token:
              type: string
            total_count:
              type: integer
            packages:
              type: array
              items:
                $ref: '#/components/schemas/Package'
    Package:
      type: object
      properties:
        id:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        status:
          type: string
        tracking_number:
          type: string
        shipping_provider_name:
          type: string
        shipping_provider_id:
          type: string
        create_time:
          type: integer
        update_time:
          type: integer
    Order:
      type: object
      properties:
        id:
          type: string
        skus:
          type: array
          items:
            $ref: '#/components/schemas/Sku'
    Sku:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        image_url:
          type: string
        quantity:
          type: integer
    PackageDetailResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            package_id:
              type: string
              example: 5433567853345
            package_status:
              type: string
              enum: [PROCESSING, FULFILLING, COMPLETED, CANCELLED]
              example: PROCESSING
            split_and_combine_tag:
              type: string
              enum: [DEFAULT, COMBINE, SPLIT]
              example: SPLIT
            has_multi_skus:
              type: boolean
              example: true
            note_tag:
              type: string
              enum: [BUYER_UNNOTED, BUYER_NOTED]
              example: BUYER_UNNOTED
            shipping_provider_name:
              type: string
              example: TT Virtual express
            shipping_provider_id:
              type: string
              example: 6617675021119438849
            shipping_type:
              type: string
              enum: [TIKTOK, SELLER]
              example: TIKTOK
            delivery_option_name:
              type: string
              example: Shipped from seller
            delivery_option_id:
              type: string
              example: 7091146663229654785
            tracking_number:
              type: string
              example: 6617675021119438849
            handover_method:
              type: string
              enum: [PICKUP, DROP_OFF]
              example: PICKUP
            pickup_slot:
              type: object
              properties:
                create_time:
                  type: integer
                  format: int64
                  example: 1635338186
                update_time:
                  type: integer
                  format: int64
                  example: 1635338186
            orders:
              type: array
              items:
                $ref: '#/components/schemas/PackageDetailResponseOrderDetail'
            recipient_address:
              $ref: '#/components/schemas/Address'
            sender_address:
              $ref: '#/components/schemas/Address'
            weight:
              type: object
              properties:
                value:
                  type: string
                  example: 1.2
                unit:
                  type: string
                  enum: [GRAM, POUND]
                  example: GRAM
            dimension:
              type: object
              properties:
                length:
                  type: string
                  example: 1.2
                width:
                  type: string
                  example: 0.2
                height:
                  type: string
                  example: 0.03
                unit:
                  type: string
                  enum: [CM, INCH]
                  example: CM
    PackageDetailResponseOrderDetail:
      type: object
      properties:
        id:
          type: string
          example: 54335448533296
        skus:
          type: array
          items:
            $ref: '#/components/schemas/PackageDetailResponseOrderDetailOrderDetailSku'
    PackageDetailResponseOrderDetailOrderDetailSku:
      type: object
      properties:
        id:
          type: string
          example: 2729382476852921560
        name:
          type: string
          example: white,128g
        image_url:
          type: string
          example: https://p19-oec-sg.ibyteimg.com/tos-maliva-i-o3syd03w52-us/12345670c
        quantity:
          type: integer
          example: 5
    Address:
      type: object
      properties:
        full_address:
          type: string
          example: 1199 Coleman Ave San Jose, CA 95110
        phone_number:
          type: string
          example: (+1)213-***-1234
        name:
          type: string
          example: Zay
        postal_code:
          type: string
          example: 95110
        address_detail:
          type: string
          example: Unit one building 8
        region_code:
          type: string
          example: US
        address_line1:
          type: string
          example: TikTok 5800 bristol Pkwy
        address_line2:
          type: string
          example: Suite 100
        address_line3:
          type: string
          example: ""
        address_line4:
          type: string
          example: ""
    ShippingDocumentResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            doc_url:
              type: string
              example: "https://magelng.bytedance.net2/wsos_v2/oec_fulfillment_doc_tts/object/wsos641232"
              description: URL to the shipping document. Valid for 24 hours.
    HandoverTimeSlotsResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            can_pickup:
              type: boolean
              example: true
              description: Indicates if door-to-door collection is supported.
            can_drop_off:
              type: boolean
              example: true
              description: Indicates if the package can be dropped off at a location.
            can_van_collection:
              type: boolean
              example: true
              description: Applicable in the UK, indicates if van collection is available.
            drop_off_point_url:
              type: string
              example: "http://example.com/dropoff/locations"
              description: URL to view package drop-off locations.
            pickup_slots:
              type: array
              items:
                type: object
                properties:
                  start_time:
                    type: integer
                    example: 1623812664
                    description: Start time of the pickup slot (Unix timestamp).
                  end_time:
                    type: integer
                    example: 1623812664
                    description: End time of the pickup slot (Unix timestamp).
                  avaliable:
                    type: boolean
                    example: true
                    description: Indicates if this time slot is available for scheduling a pickup.
    TrackingResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            tracking:
              type: array
              items:
                $ref: '#/components/schemas/TrackingInfo'
    TrackingInfo:
      type: object
      properties:
        description:
          type: string
          example: "Your package was delivered!"
          description: Description of the tracking update.
        update_time_millis:
          type: integer
          example: 1694685539000
          description: Update time in milliseconds since the epoch.
    UpdatePackageShippingInfoResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: Success
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
          description: Unique request log identifier.
        data:
          type: object
          description: Object containing specific return information, typically empty for successful updates.
    UpdatePackageDeliveryStatusResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: Success
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
          description: Unique request log identifier.
        data:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: integer
                    example: 10007014
                    description: The failed reason code.
                  message:
                    type: string
                    example: order not in sof service
                    description: Fulfillment failed reason.
                  detail:
                    type: object
                    properties:
                      package_id:
                        type: string
                        example: "1231231231231"
                        description: Package ID that encountered an error.
    OrderSplitAttributesResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: Success
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
          description: Unique request log identifier.
        data:
          type: object
          properties:
            split_attributes:
              type: array
              items:
                type: object
                properties:
                  order_id:
                    type: string
                    example: "556643423444"
                    description: TikTok Shop order ID.
                  can_split:
                    type: boolean
                    example: false
                    description: Indicates if the order can be split into multiple packages.
                  reason:
                    type: string
                    example: "Order has been canceled"
                    description: Reason why the order cannot be split. Only return this field when can_split is false.
    SplittableGroup:
      type: object
      properties:
        id:
          type: string
          example: "123"
          description: A unique identifier for the group of items to be split.
        order_line_item_ids:
          type: array
          items:
            type: string
          example: ["57646237751283022", "576462377512830223"]
          description: The order line item IDs that need to be split into this group.
    OrderSplitResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: Success
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
          description: Unique request log identifier.
        data:
          type: object
          properties:
            packages:
              type: array
              items:
                type: object
                properties:
                  splittable_group_id:
                    type: string
                    example: "123"
                    description: The ID of split group in request body.
                  id:
                    type: string
                    example: "223362377512830222"
                    description: Package ID after successful split.
    CombinablePackagesResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: Success
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
          description: Unique request log identifier.
        data:
          type: object
          properties:
            combinable_packages:
              type: array
              items:
                $ref: '#/components/schemas/CombinablePackage'
            next_page_token:
              type: string
              example: 6AsPQsUMvH3RkchNUPPh22NROHkE0D8pmq/N5M1kHYcZmtRyv9aVrNv65W7Q6tFA
              description: Cursor for next page of results.
            total_count:
              type: integer
              example: 10
              description: Total number of eligible packages.
    CombinablePackage:
      type: object
      properties:
        id:
          type: string
          example: 57466538837665
          description: Package ID, pre-generated after calling the Search Draft Package API.
        order_ids:
          type: array
          items:
            type: string
          example: ["57466538837665", "57466538837666"]
          description: List of order IDs for this package.
    CombinePackageRequest:
      type: object
      required:
        - combinable_packages
      properties:
        combinable_packages:
          type: array
          items:
            $ref: '#/components/schemas/CombinablePackageInfo'
      example:
        combinable_packages:
          - id: "12321313133"
            order_ids: ["1233213123123", "32132131231"]
    CombinablePackageInfo:
      type: object
      properties:
        id:
          type: string
          example: "12321313133"
          description: The ID of the package that can be combined.
        order_ids:
          type: array
          items:
            type: string
          example: ["1233213123123", "32132131231"]
          description: List of order IDs.
    CombinePackageResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: Success
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
          description: Unique request log identifier.
        data:
          type: object
          properties:
            packages:
              type: array
              items:
                $ref: '#/components/schemas/CombinedPackage'
            errors:
              type: array
              items:
                $ref: '#/components/schemas/CombineError'
    CombinedPackage:
      type: object
      properties:
        id:
          type: string
          example: "413234134123412"
          description: The package ID generated after successful combination.
        order_ids:
          type: array
          items:
            type: string
          example: ["1233213123123", "32132131231"]
          description: Order list for this package.
    CombineError:
      type: object
      properties:
        code:
          type: integer
          example: 10007014
          description: The failure reason code.
        message:
          type: string
          example: "fulfillment not allow combine package"
          description: The failure reason of the combined package action.
        detail:
          type: object
          properties:
            package_id:
              type: string
              example: "1231231231231313123132"
              description: Package ID related to the error.
    UncombinePackagesRequest:
      type: object
      properties:
        order_ids:
          type: array
          items:
            type: string
          description: TikTok Shop order id. Indicate the orders that need to be removed from the package.
      example:
        order_ids: ["11132131131"]
    UncombinePackagesResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: Success
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
          description: Unique request log identifier.
        data:
          type: object
          properties:
            packages:
              type: array
              items:
                $ref: '#/components/schemas/PackageInfo'
    PackageInfo:
      type: object
      properties:
        id:
          type: string
          example: "123456"
          description: Package ID after uncombine operation.
        order_ids:
          type: array
          items:
            type: string
          example: ["576462377512830168", "576462377512830168"]
          description: List of order IDs that remain in the package after the uncombine operation.
    MarkPackageAsShippedRequest:
      type: object
      properties:
        order_line_item_ids:
          type: array
          items:
            type: string
          description: Order line item ID list. Optional field.
        tracking_number:
          type: string
          description: Tracking number provided by the shipping carrier.
        shipping_provider_id:
          type: string
          description: Use Get Shipping Provider API to retrieve the shipping_provider_id for shipping providers.
      example:
        order_line_item_ids: ["2321312321311"]
        shipping_provider_id: "12312312321323432"
        tracking_number: "6617675021119438849"
    MarkPackageAsShippedResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: Success
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
          description: Unique request log identifier.
        data:
          type: object
          properties:
            order_id:
              type: string
              example: "32131324123321"
              description: TikTok Shop order ID.
            order_line_item_ids:
              type: array
              items:
                type: string
              example: ["31322412312312"]
              description: Order line item ID.
            package_id:
              type: string
              example: "32141235124234"
              description: Package ID generated after marking as shipped.
            warning:
              type: object
              properties:
                message:
                  type: string
                  example: "match more than one provider"
                  description: Specific warning information related to the shipment process.
    ShipPackageRequest:
      type: object
      properties:
        handover_method:
          type: string
          enum: [PICKUP, DROP_OFF]
          description: Method of package handover to the shipping carrier.
        pickup_slot:
          type: object
          properties:
            start_time:
              type: integer
              format: int64
              example: 1623812664
              description: The start date and time of the package pick up time slot.
            end_time:
              type: integer
              format: int64
              example: 1623812664
              description: The end date and time of the package pick up time slot.
        self_shipment:
          type: object
          properties:
            tracking_number:
              type: string
              description: Tracking number for the package when shipping is arranged by the seller.
            shipping_provider_id:
              type: string
              description: ID of the shipping provider used by the seller for shipping the package.
      required: [self_shipment]
      example:
        handover_method: "PICKUP"
        pickup_slot:
          start_time: 1623812664
          end_time: 1623812664
        self_shipment:
          tracking_number: "JX12345"
          shipping_provider_id: "6617675021119438849"
    ShipPackageResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: "Success"
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: "202203070749000101890810281E8C70B7"
          description: Unique request identifier.
      example:
        code: 0
        message: "Success"
        request_id: "202203070749000101890810281E8C70B7"
    BatchShipPackagesRequest:
      type: object
      properties:
        packages:
          type: array
          items:
            $ref: '#/components/schemas/ShipPackageDetails'
      example:
        packages:
          - id: "12321312312431"
            handover_method: "PICKUP"
            pickup_slot:
              start_time: 1623812664
              end_time: 1623812664
            self_shipment:
              tracking_number: "JX12345"
              shipping_provider_id: "6617675021119438849"
    ShipPackageDetails:
      type: object
      properties:
        id:
          type: string
          description: The ID of the package to be shipped.
        handover_method:
          type: string
          enum: [PICKUP, DROP_OFF]
          description: Method of handover to the shipping provider.
        pickup_slot:
          type: object
          properties:
            start_time:
              type: integer
              format: int64
              example: 1623812664
            end_time:
              type: integer
              format: int64
              example: 1623812664
        self_shipment:
          type: object
          properties:
            tracking_number:
              type: string
              description: Tracking number for the package when self-shipping.
            shipping_provider_id:
              type: string
              description: ID of the shipping provider used for self-shipping.
    BatchShipPackagesResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: "Success"
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: "202203070749000101890810281E8C70B7"
          description: Unique request identifier.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseError'
    ResponseError:
      type: object
      properties:
        code:
          type: integer
          example: 10007014
          description: The failed reason code.
        message:
          type: string
          example: "package in freeze status"
          description: Fulfillment failed reason.
        detail:
          type: object
          properties:
            package_id:
              type: string
              description: Package Id.
    UploadDeliveryFileResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: "Success"
          description: The success or failure messages returned in API response.
        request_id:
          type: string
          example: "202203070749000101890810281E8C70B7"
          description: Unique request identifier for tracking.
        data:
          type: object
          properties:
            url:
              type: string
              example: "https://maellane.bytedance.net/wsos_v2/oec_fulfillment_doc_tts/o"
              description: The URL of the uploaded file, can be directly opened in a browser.
            name:
              type: string
              example: "attachment_file.pdf"
              description: The name of the file as stored in TikTok Shop.
      required:
        - code
        - message
        - request_id
        - data
    ShippingServicesResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: Success
        request_id:
          type: string
          example: 202203070749000101890810281E8C70B7
        data:
          type: object
          properties:
            order_id:
              type: string
              example: 28823355942588
            order_line_id:
              type: array
              items:
                type: string
              example: ["32132124331234"]
            weight:
              $ref: '#/components/schemas/Weight'
            shipping_services:
              type: array
              items:
                $ref: '#/components/schemas/ShippingService'
            dimension:
              $ref: '#/components/schemas/Dimension'
    Weight:
      type: object
      properties:
        value:
          type: string
          example: 1.2
        unit:
          type: string
          example: GRAM
    Dimension:
      type: object
      properties:
        length:
          type: string
          example: 0.3
        width:
          type: string
          example: 0.2
        height:
          type: string
          example: 0.04
        unit:
          type: string
          example: INCH
    ShippingService:
      type: object
      properties:
        id:
          type: string
          example: 288233559123860015
        name:
          type: string
          example: UPS-first class
        price:
          type: string
          example: 5
        currency:
          type: string
          example: USD
        earliest_delivery_days:
          type: integer
          example: 3
        latest_delivery_days:
          type: integer
          example: 5
        is_default:
          type: boolean
          example: false
        shipping_provider_name:
          type: string
          example: UPS
        shipping_provider_id:
          type: string
          example: 288233559123860012
    CreatePackageResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: "Success"
        request_id:
          type: string
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            order_id:
              type: string
              example: "2882335594258860015"
            order_line_item_ids:
              type: array
              items:
                type: string
              example: ["32132124331234"]
            package_id:
              type: string
              example: "2882335594258860016"
            shipping_service_info:
              type: object
              properties:
                id:
                  type: string
                  example: "288233559123860015"
                name:
                  type: string
                  example: "UPS-first class"
                price:
                  type: string
                  example: "10"
                currency:
                  type: string
                  example: "USD"
                earliest_delivery_days:
                  type: integer
                  example: 3
                latest_delivery_days:
                  type: integer
                  example: 5
                shipping_provider_id:
                  type: string
                  example: "2882322591238"
                shipping_provider_name:
                  type: string
                  example: "UPS"
            dimension:
              type: object
              properties:
                length:
                  type: string
                  example: "1.2"
                width:
                  type: string
                  example: "0.2"
                height:
                  type: string
                  example: "0.03"
                unit:
                  type: string
                  example: "CM"
            weight:
              type: object
              properties:
                value:
                  type: string
                  example: "1.2"
                unit:
                  type: string
                  example: "GRAM"
            create_time:
              type: integer
              example: 1623812664
            warnings:
              type: array
              items:
                type: object
                properties:
                  message:
                    type: string
                    example: "Package weight exceeds limit for selected service."
    UpdateShippingInfoResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: The success or failure status code returned in API response.
        message:
          type: string
          example: "Success"
          description: The success or failure messages returned in API response. Reasons for failure will be described in the message.
        request_id:
          type: string
          example: "202203070749000101890810281E8C70B7"
          description: A unique identifier for the request, used for debugging and tracking purposes.
        data:
          type: object
          description: Contains specific return information, which might be empty for this operation as the main objective is to update data.
    SearchCancellationsResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: "Success"
        request_id:
          type: string
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            cancellations:
              type: array
              items:
                $ref: '#/components/schemas/CancellationDetails'
            total_count:
              type: integer
              example: 100
            next_page_token:
              type: string
              example: "aDU2dHIzMlFhME5CUzJKUDhDdVJhTDM1WmJkeFVTVW9LTkRaSnNaZCtuWjJXVU5CSDhlaA=="
    SearchRequestBody:
      type: object
      properties:
        cancel_ids:
          type: array
          items:
            type: string
          description: "List of order cancellations ids."
        order_ids:
          type: array
          items:
            type: string
          description: "List of TikTok Shop order ids."
        buyer_user_ids:
          type: array
          items:
            type: string
          description: "List of TikTok Shop buyer user ids."
        cancel_types:
          type: array
          items:
            type: string
            enum:
              - CANCEL
              - BUYER_CANCEL
          description: "List of cancel type, which is enum type."
        cancel_status:
          type: array
          items:
            type: string
            enum:
              - CANCELLATION_REQUEST_PENDING
              - CANCELLATION_REQUEST_SUCCESS
              - CANCELLATION_REQUEST_CANCEL
              - CANCELLATION_REQUEST_COMPLETE
          description: "List of order cancellation status, which is enum type."
        create_time_ge:
          type: integer
          description: "Create time greater than or equal to."
        create_time_lt:
          type: integer
          description: "Create time less than."
        update_time_ge:
          type: integer
          description: "Update time greater than or equal to."
        update_time_lt:
          type: integer
          description: "Update time less than."
        locale:
          type: string
          description: "BCP 47 locale identifier. Default value is 'en'. Some fields, such as reason_text, are multilingual."
    CancellationDetails:
      type: object
      properties:
        cancel_id:
          type: string
          description: The identifier of a specific order cancellation.
          example: "4035318504086604100"
        order_id:
          type: string
          description: TikTok Shop order ID. Contains multiple order line item IDs.
          example: "577087614418520388"
        cancel_type:
          type: string
          enum:
            - CANCEL
            - BUYER_CANCEL
          description: Cancel type. Indicates who initiated the cancellation.
          example: "BUYER_CANCEL"
        cancel_status:
          type: string
          enum:
            - CANCELLATION_REQUEST_PENDING
            - CANCELLATION_REQUEST_SUCCESS
            - CANCELLATION_REQUEST_CANCELLED
            - CANCELLATION_REQUEST_COMPLETE
          description: The current status of the cancellation request.
          example: "CANCELLATION_REQUEST_PENDING"
        role:
          type: string
          enum:
            - BUYER
            - SELLER
            - SYSTEM
          description: Entity that initiated the order cancellation.
          example: "BUYER"
        cancel_reason:
          type: string
          description: Code representing the reason for cancellation.
          example: "ecom_order_to_ship_canceled_reason_created_by_mistakes"
        cancel_reason_text:
          type: string
          description: Text description of the reason for cancellation.
          example: "Order created by mistake"
        create_time:
          type: integer
          description: Unix timestamp indicating when the cancellation was created.
          example: 1690451136
        update_time:
          type: integer
          description: Unix timestamp indicating the last update time of the cancellation.
          example: 1690451136
        seller_next_action_response:
          type: array
          items:
            $ref: '#/components/schemas/SellerNextActionResponse'
        refund_amount:
          $ref: '#/components/schemas/RefundAmount'
        cancel_line_items:
          type: array
          items:
            $ref: '#/components/schemas/CancelLineItem'
    SellerNextActionResponse:
      type: object
      properties:
        action:
          type: string
          enum:
            - SELLER_RESPOND_CANCEL
          description: Action required from the seller regarding the cancellation.
        deadline:
          type: integer
          description: Unix timestamp indicating the deadline for the seller to perform the required action.
          example: 1690554680
    RefundAmount:
      type: object
      properties:
        currency:
          type: string
          description: Currency for the refund amount.
          example: "USD"
        refund_total:
          type: string
          description: Total refund amount to be returned to the buyer.
          example: "1.23"
        refund_subtotal:
          type: string
          description: Subtotal of the items' refund amount.
          example: "1"
        refund_shipping_fee:
          type: string
          description: Amount of shipping fee to be refunded.
          example: "0.2"
        refund_tax:
          type: string
          description: Amount of tax to be refunded.
          example: "0.03"
        retail_delivery_fee:
          type: string
          description: Retail delivery fee applicable in certain regions.
          example: "0.1"
    CancelLineItem:
      type: object
      properties:
        cancel_line_item_id:
          type: string
          description: Unique identifier for the cancellation line item.
          example: "4035227913481196964"
        order_line_item_id:
          type: string
          description: Order line item ID associated with the cancellation.
          example: "576468844534141348"
        sku_id:
          type: string
          description: SKU ID associated with the cancellation line item.
          example: "2729382476852921560"
        sku_name:
          type: string
          description: Name of the SKU associated with the cancellation line item.
          example: "1#, Standard"
        product_image:
          type: object
          properties:
            url:
              type: string
              description: URL of the product image.
              example: "https://p16-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/004797ebfd8c4d3da2df1cc4bfdb0614~tplv-o3syd03w52-origin-jpeg.jpeg?from=4246405447"
            width:
              type: integer
              description: Image width of the product, unit px.
              example: 200
            height:
              type: integer
              description: Image height of the product, unit px.
              example: 200
        product_name:
          type: string
          description: Name of the product associated with the cancellation line item.
          example: "bundle No Heel Flat Heel Summer Winter Round Toe"
        seller_sku:
          type: string
          description: SKU name defined by the seller.
          example: "YYAPC23078TRT30"
        refund_amount:
          $ref: '#/components/schemas/RefundAmount'
    ApproveCancelResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          description: The API might return additional data in this object. For this particular API, the object is empty as the approval process does not return data.
    RejectCancellationResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          description: The API might return additional data in this object. For this particular API, the object is empty as the rejection process does not return data.
    SearchReturnsResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            return_orders:
              type: array
              items:
                $ref: '#/components/schemas/ReturnOrderDetails'
            total_count:
              type: integer
              description: Total count of filtered returns.
              example: 100
            next_page_token:
              type: string
              description: Page token to query the next page of orders. The last page is indicated by an empty string.
              example: "aDU2dHIzMlFhME5CUzJKUDhDdVJhTDM1WmJkeFVTVW9LTkRaSnNaZCtuWjJXVU5CSDhlaA=="
    ReturnOrderDetails:
      type: object
      required:
        - order_id
        - return_id
        - return_type
        - return_status
        - arbitration_status
        - role
        - return_reason
        - shipment_type
        - handover_method
        - return_tracking_number
        - return_provider_name
        - return_provider_id
        - pre_return_id
        - next_return_id
        - can_buyer_keep_item
        - update_time
        - seller_next_action_response
        - create_time
        - return_line_items
        - refund_amount
      properties:
        order_id:
          type: string
          description: TikTok Shop order id containing multiple order line item ids.
          example: "577686530908261117"
        return_id:
          type: string
          description: The identifier of a specific return.
          example: "4035318504086604100"
        return_type:
          type: string
          description: Return type.
          enum:
            - REFUND
            - RETURN_AND_REFUND
            - REPLACEMENT
          example: "REFUND"
        return_status:
          type: string
          description: Return status.
          enum:
            - RETURN_OR_REFUND_REQUEST_PENDING
            - REFUND_OR_RETURN_REQUEST_REJECT
            - AWAITING_BUYER_SHIP
            - BUYER_SHIPPED_ITEM
            - REJECT_RECEIVE_PACKAGE
            - RETURN_OR_REFUND_REQUEST_SUCCESS
            - RETURN_OR_REFUND_REQUEST_CANCEL
            - RETURN_OR_REFUND_REQUEST_COMPLETE
            - REPLACEMENT_REQUEST_PENDING
            - REPLACEMENT_REQUEST_REJECT
            - REPLACEMENT_REQUEST_REFUND_SUCCESS
            - REPLACEMENT_REQUEST_CANCEL
            - REPLACEMENT_REQUEST_COMPLETE
          example: "RETURN_OR_REFUND_REQUEST_PENDING"
        arbitration_status:
          type: string
          description: Arbitration status.
          enum:
            - IN_PROGRESS
            - SUPPORT_BUYER
            - SUPPORT_SELLER
            - CLOSED
          example: "IN_PROGRESS"
        role:
          type: string
          description: Return initiated by.
          enum:
            - BUYER
            - SELLER
            - OPERATOR
            - SYSTEM
          example: "BUYER"
        return_reason:
          type: string
          description: Reason for return.
          example: "ecom_order_to_ship_canceled_reason_created_by_mistakes"
        return_reason_text:
          type: string
          description: Reason for return in another language.
          example: "Order created by mistake"
        shipment_type:
          type: string
          description: Shipment method buyer selected to send the item(s) back to seller.
          enum:
            - PLATFORM
            - BUYER_ARRANGE
          example: "PLATFORM"
        handover_method:
          type: string
          description: Handover method buyer chooses when returning item(s) to seller using platform's shipping service.
          enum:
            - DROP_OFF
            - PICKUP
          example: "DROP_OFF"
        return_tracking_number:
          type: string
          description: Tracking number of parcels when buyer returns the item(s).
          example: "213456789098765433456"
        return_provider_name:
          type: string
          description: Provider name of parcel when buyer returns the item(s).
          example: "J&T Express"
        return_provider_id:
          type: string
          description: Provider id of parcel when buyer returns the items.
          example: "TH27014E9R5Q4G"
        pre_return_id:
          type: string
          description: Previous return id current return order is edited from.
          example: "4035310341095393452"
        next_return_id:
          type: string
          description: Next return id current return order is edited to.
          example: "4035310341095393463"
        can_buyer_keep_item:
          type: boolean
          description: Whether buyer can keep the item(s) in a return or replacement process.
          example: true
        update_time:
          type: integer
          description: Return update time, unix timestamp.
          example: 1690453136
        seller_next_action_response:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
                description: Seller's next action.
                enum:
                  - SELLER_RESPOND_REFUND
                  - SELLER_RESPOND_RETURN
                  - SELLER_RESPOND_RECEIVE_PACKAGE
                  - SELLER_RESPOND_REPLACEMENT
                example: "SELLER_RESPOND_REFUND"
              deadline:
                type: integer
                description: Deadline for when seller must perform the next action.
                example: 1690554680
          description: Seller's next action and deadline.
        create_time:
          type: integer
          description: Return create time, unix timestamp.
          example: 1690451136
        return_line_items:
          type: array
          items:
            type: object
            properties:
              return_line_item_id:
                type: string
                description: Return order line id.
                example: "4035227657962164811"
              order_line_item_id:
                type: string
                description: Order line id.
                example: "576473917261451851"
              sku_id:
                type: string
                description: SKU id.
                example: "2729382476852921560"
              sku_name:
                type: string
                description: SKU name.
                example: "1#, Standard"
              product_name:
                type: string
                description: Product name.
                example: "(SP) [PROMO BUNDLING] NICE Tissue Facial 180s x 5 pcs"
              seller_sku:
                type: string
                description: SKU name defined by seller.
                example: "PUTIH 1 TALI"
              product_image:
                type: object
                properties:
                  url:
                    type: string
                    description: Image url of the product.
                    example: "https://p16-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/004797ebfd8c4d3da2df1cc4bfdb0614~tplv-o3syd03w52-origin-jpeg.jpeg?from=4246405447"
                  width:
                    type: integer
                    description: Image width of the product, unit px.
                    example: 200
                  height:
                    type: integer
                    description: Image height of the product, unit px.
                    example: 200
              refund_amount:
                type: object
                properties:
                  currency:
                    type: string
                    description: Currency for payment.
                    example: "USD"
                  refund_total:
                    type: string
                    description: Total refund amount to buyer.
                    example: "1.23"
                  refund_subtotal:
                    type: string
                    description: Refund subtotal amount to buyer. This is the total price of all items returned.
                    example: "1"
                  refund_shipping_fee:
                    type: string
                    description: Shipping fee refund to buyer.
                    example: "0.2"
                  refund_tax:
                    type: string
                    description: Tax returned to buyer.
                    example: "0.03"
                  retail_delivery_fee:
                    type: string
                    description: Retail delivery fee takes effect once platform GMV exceeds 500,000 USD, according to US Colorado states' compliance rules.
                    example: "0.1"
          description: Return order lines.
        shipping_fee_amount:
          type: array
          items:
            type: object
            properties:
              currency:
                type: string
                description: Currency of return shipping fee.
                example: "USD"
              seller_paid_return_shipping_fee:
                type: string
                description: Amount of return shipping fee seller paid.
                example: "0.1"
              platform_paid_return_shipping_fee:
                type: string
                description: Amount of return shipping fee platform paid.
                example: "0.1"
              buyer_paid_return_shipping_fee:
                type: string
                description: Amount of return shipping fee buyer paid.
                example: "0.1"
          description: Amount of return shipping fee.
        refund_amount:
          type: object
          properties:
            currency:
              type: string
              description: Currency for payment.
              example: "USD"
            refund_total:
              type: string
              description: Total refund amount to buyer.
              example: "1.23"
            refund_subtotal:
              type: string
              description: Refund subtotal amount to buyer. This is the total price of all items returned.
              example: "1"
            refund_shipping_fee:
              type: string
              description: Shipping fee refund to buyer.
              example: "0.2"
            refund_tax:
              type: string
              description: Tax returned to buyer.
              example: "0.03"
            retail_delivery_fee:
              type: string
              description: Retail delivery fee takes effect once platform GMV exceeds 500,000 USD, according to US Colorado states' compliance rules.
              example: "0.1"
          description: Total refund amount to buyer.
      description: Return order details.
    ApproveReturnResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          description: The API might return additional data in this object. For this particular API, the object is empty as the approval process does not return data.
    RejectReturnResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          description: The API might return additional data in this object. For this particular API, the object is empty as the rejection process does not return data.
    GetAftersaleEligibilityResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            sku_eligibility:
              type: array
              items:
                type: object
                properties:
                  sku_id:
                    type: string
                    description: SKU ID.
                    example: "1729385144994206632"
                  line_item_eligibility:
                    type: array
                    items:
                      type: object
                      properties:
                        request_type:
                          type: string
                          enum: [CANCEL, REFUND, RETURN_AND_REFUND]
                          description: Type of after-sales request.
                        order_line_items_ids:
                          type: array
                          items:
                            type: string
                          description: Order line item IDs.
                          example: ["576469648086306000"]
                        eligible:
                          type: boolean
                          description: Indicates if the item can initiate the after-sales request.
                          example: true
                        ineligible_code:
                          type: integer
                          description: The reason code for being ineligible to initiate specific after-sales requests.
                          example: 25001001
                        ineligible_reason:
                          type: string
                          description: The reason for being ineligible to initiate specific after-sales requests.
                          example: "invalid order status"        
    GetRejectReasonsResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            reasons:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: The code name of the reason why a seller might reject a request.
                    example: "seller_reject_apply_you_have_reached_an_agreement_with_the_buyer"
                  text:
                    type: string
                    description: The human-readable text of the reason, changeable by locale.
                    example: "You have reached an agreement with the buyer"
    CalculateRefundResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            order_refund_amount:
              type: object
              properties:
                currency:
                  type: string
                  description: Currency for payment.
                  example: "USD"
                refund_total:
                  type: string
                  description: Total amount refunded to buyer.
                  example: "1.23"
                refund_subtotal:
                  type: string
                  description: Total price of item being returned.
                  example: "1"
                refund_shipping_fee:
                  type: string
                  description: Shipping fee refunded to buyer.
                  example: "0.2"
                refund_tax:
                  type: string
                  description: Tax returned to buyer.
                  example: "0.03"
                retail_delivery_fee:
                  type: string
                  description: Retail delivery fee effective once platform GMV exceeds 500,000 USD, per US Colorado state compliance rules.
                  example: "0.1"
    GetReturnRecordsResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            records:
              type: array
              items:
                type: object
                properties:
                  event:
                    type: string
                    description: Event type.
                    example: "ORDER_RETURN"
                  role:
                    type: string
                    description: Who triggered the event.
                    enum: [BUYER, SELLER, OPERATOR, SYSTEM]
                    example: "Buyer"
                  description:
                    type: string
                    description: Description of the record.
                    example: "Customer submitted a return request"
                  reason_text:
                    type: string
                    description: The multilingual text of reason, language changed by locale.
                    example: "Wrong product was sent"
                  note:
                    type: string
                    description: Note by seller or buyer.
                    example: "Reach an agreement with the buyer"
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          description: URL of the image.
                          example: "https://p16-oec-va.ibyteimg.com/tos-maliva-i-o3syd03w52-us/004797ebfd8c4d3da2df1cc4bfdb0614~tplv-o3syd03w52-origin-jpeg.jpeg?from=4246405447"
                        width:
                          type: integer
                          description: The width of the image, unit px.
                          example: 200
                        height:
                          type: integer
                          description: The height of the image, unit px.
                          example: 200
                  videos:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          description: Video URL.
                          example: "https://v16m-default.akamaized.net/1e26046c3df91cd008d2ababba9445e2/65005d33/video/tos/maliva/tos-maliva-v-d8ca36-us/oQVCbIQemDpQxI9lHsg9IXQAb7mwgBabababab"
                        cover:
                          type: string
                          description: Video post.
                          example: "https://p16-oec-va.ibyteimg.com/musically-maliva-obj/998d0381960bda1ef272f4a7724cf5ed~tplv-o3syd03w52-origin-jpeg.jpeg?from=4246405489"
                        width:
                          type: integer
                          description: Video image width, unit px.
                          example: 200
                        height:
                          type: integer
                          description: Video height, unit px.
                          example: 200
                        duration_millis:
                          type: integer
                          description: Duration, unit millisecond.
                          example: 3000
                  create_time:
                    type: integer
                    description: When the event happened, Unix Timestamp.
                    example: 1690532213
    CancelOrderResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            cancel_id:
              type: string
              description: The identifier of a specific order cancellation.
              example: "4035319218955782461"
            cancel_status:
              type: string
              description: The status of an order cancellation request.
              enum: [CANCELLATION_REQUEST_PENDING, CANCELLATION_REQUEST_SUCCESS, CANCELLATION_REQUEST_CANCEL, CANCELLATION_REQUEST_COMPLETE]
              example: "CANCELLATION_REQUEST_SUCCESS"
    CreateReturnResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            return_id:
              type: string
              description: The identifier of the specific return request.
              example: "4035319218955782461"
            return_status:
              type: string
              description: The status of the return request.
              enum: [RETURN_OR_REFUND_REQUEST_PENDING, REFUND_OR_RETURN_REQUEST_REJECT, AWAITING_BUYER_SHIP, BUYER_SHIPPED_ITEM, REJECT_RECEIVE_PACKAGE, RETURN_OR_REFUND_REQUEST_SUCCESS, RETURN_OR_REFUND_REQUEST_CANCEL, RETURN_OR_REFUND_REQUEST_COMPLETE]
              example: "RETURN_OR_REFUND_REQUEST_PENDING"
    GetWarehouseDeliveryOptionsResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            delivery_options:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Delivery option ID.
                    example: "6955034615128000261"
                  name:
                    type: string
                    description: Delivery option name.
                    example: "LSV-TTS-STD"
                  type:
                    type: string
                    description: Delivery option type.
                    example: "STANDARD"
                  description:
                    type: string
                    description: Delivery option description.
                    example: "LSV-TTS-STD S"
                  dimension_limit:
                    type: object
                    properties:
                      max_height:
                        type: integer
                        description: Maximum height limit.
                        example: 100
                      max_length:
                        type: integer
                        description: Maximum length limit.
                        example: 100
                      max_width:
                        type: integer
                        description: Maximum width limit.
                        example: 100
                      unit:
                        type: string
                        description: The unit of measurement for dimensions.
                        enum: [CM, INCH]
                        example: "INCH"
                  weight_limit:
                    type: object
                    properties:
                      max_weight:
                        type: integer
                        description: Maximum weight limit.
                        example: 100
                      min_weight:
                        type: integer
                        description: Minimum weight limit.
                        example: 100
                      unit:
                        type: string
                        description: The unit of measurement for weight.
                        enum: [GRAM, POUND]
                        example: "GRAM"
    GetWarehouseListResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            warehouses:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Primary Key for the warehouse, immutable.
                    example: "7000714532876273410"
                  name:
                    type: string
                    description: Warehouse name.
                    example: "Guangzhou"
                  effect_status:
                    type: string
                    description: Warehouse status, indicating if products are available for sale.
                    enum: [ENABLED, DISABLED, RESTRICTED]
                    example: "ENABLED"
                  type:
                    type: string
                    description: Type of warehouse.
                    enum: [SALES_WAREHOUSE, RETURN_WAREHOUSE]
                    example: "SALES_WAREHOUSE"
                  sub_type:
                    type: string
                    description: Subtype of warehouse, indicating its specific use or location nature.
                    enum: [DOMESTIC_WAREHOUSE, CB_OVERSEA_WAREHOUSE, CB_DIRECT_SHIPPING_WAREHOUSE]
                    example: "DOMESTIC_WAREHOUSE"
                  is_default:
                    type: boolean
                    description: Indicates if this is the default warehouse.
                    example: true
                  address:
                    type: object
                    properties:
                      region:
                        type: string
                        example: "China"
                      state:
                        type: string
                        example: "GuangDong"
                      city:
                        type: string
                        example: "GuanZhou"
                      distict:
                        type: string
                        example: "HuaDu"
                      town:
                        type: string
                        example: "town"
                      contact_person:
                        type: string
                        example: "Lee"
                      postal_code:
                        type: string
                        example: "510000"
                      full_address:
                        type: string
                        example: "South Sea 11 floor"
                      region_code:
                        type: string
                        example: "CN"
                      phone_number:
                        type: string
                        example: "188****2234"
    GetShippingProvidersResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            shipping_providers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the shipping provider.
                    example: "7117858858072016686"
                  name:
                    type: string
                    description: Name of the shipping provider.
                    example: "USPS"
    GetGlobalSellerWarehouseResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            global_warehouses:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the global warehouse.
                    example: "7000714532876273411"
                  name:
                    type: string
                    description: Name of the global warehouse.
                    example: "Guangzhou"
                  ownership:
                    type: string
                    description: Indicates the ownership of the warehouse. It can be either owned by the seller ('SELLER') or by TikTok Shop as part of a platform cooperation ('PLATFORM_COOPERATION').
                    example: "SELLER"
    CreatePromotionActivityResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            activity_id:
              type: string
              description: A unique ID that identifies different activities.
              example: "7136104329798256386"
            create_time:
              type: integer
              description: Activity creation time, unix timestamp.
              example: 1661756811
            update_time:
              type: integer
              description: Activity update time, unix timestamp.
              example: 1661756811
            status:
              type: string
              description: Activity status.
              enum:
                - DRAFT
                - NOT_START
                - ONGOING
                - EXPIRED
                - DEACTIVATED
                - NOT_EFFECTIVE
              example: "ONGOING"
    UpdateActivityProductResponse:
      type: object
      properties:
        code:
          type: integer
          description: The success or failure status code returned in the API response.
          example: 0
        message:
          type: string
          description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
          example: "Success"
        request_id:
          type: string
          description: A unique identifier for the request, used for troubleshooting and tracking.
          example: "202203070749000101890810281E8C70B7"
        data:
          type: object
          properties:
            activity_id:
              type: string
              description: A unique ID that identifies different activities.
              example: "7136104329798256386"
            title:
              type: string
              description: Activity name set by the merchant.
              example: "DiscountPromotion"
            update_time:
              type: integer
              description: Activity update time, unix timestamp.
              example: 1661756811
            status:
              type: string
              description: Activity status.
              enum:
                - DRAFT
                - NOT_START
                - ONGOING
                - EXPIRED
                - DEACTIVATED
                - NOT_EFFECTIVE
              example: "DRAFT"
            total_count:
              type: integer
              description: The number of items (ProductInfo objects) in this request.
              example: 1
    RemoveActivityProductResponse:
        type: object
        properties:
          code:
            type: integer
            description: The success or failure status code returned in the API response.
            example: 0
          message:
            type: string
            description: The success or failure message returned in the API response. Reasons for failure will be described in this message.
            example: "Success"
          request_id:
            type: string
            description: A unique identifier for the request, used for troubleshooting and tracking.
            example: "202203070749000101890810281E8C70B7"
          data:
            type: object
            properties:
              activity_id:
                type: string
                description: A unique ID that identifies different activities.
                example: "7136104329798256386"
              status:
                type: string
                description: Activity status, indicating the current state of the activity post-deletion of the product(s).
                example: "ONGOING"
              update_time:
                type: integer
                description: Activity update time, unix timestamp, reflecting the last modification time.
                example: 1661765135
    OrderStatementTransaction:
      type: object
      properties:
        id:
          type: string
          example: 1636700041413599290
          description: The transaction Unique key.
        status:
          type: string
          example: SETTLED
          description: The status of the transaction. Under normal circumstances, only settled orders are included in the response.
        statement_time:
          type: integer
          example: 1685548800
          description: Time of statement in UTC time zone
        settlement_amount:
          type: string
          example: 130
          description: settlement_amount = revenue_amount + fee_amount + adjustment_amount
        currency:
          type: string
          example: USD
          description: The three-digit currency code in ISO 4217 format.
        revenue_amount:
          type: string
          example: 200
          description: Total revenue amount, revenue_amont = customer_payment_amount + platform_discount_amount + platform_discount_refund_amount + customer_order_refund_amount + shipping_fee_subsidy_amount
        statement_id:
          type: string
          example: 7238804564097517339
          description: The unique ID of statement.
        after_seller_discounts_subtotal_amount:
          type: string
          example: 180
          description: The price of all order items after the seller's discount is deducted.
        customer_shipping_fee_amount:
          type: string
          example: 10
          description: The expected shipping fee borne by the buyer calculated based on the weight of the product uploaded by the seller.
        sales_tax_payment_amount:
          type: string
          example: 10
          description: Only for US. The sales tax collected from the buyer for the product and delivery.
        platform_discount_amount:
          type: string
          example: 20
          description: This category represents promotion subsidies funded by TikTok Shop, such as coupons and other campaign discounts.
        platform_discount_refund_amount:
          type: string
          example: 0
          description: If a refund happens, the platform discount that was applied will be regarded as invalid and deducted from the final settlement.
        customer_payment_amount:
          type: string
          example: 180
          description: The total amount paid by the customer, customer_payment = after_seller_discounts_subtotal_amount + customer_shipping_fee_amount - platform_discount_amount + sales_tax_payment_amount.
        customer_refund_amount:
          type: string
          example: 0
          description: The exact amount refunded to the customer.
        platform_refund_subsidy_amount:
          type: string
          example: 0
          description: The refunded amount subsidized by the platform.
        shipping_fee_subsidy_amount:
          type: string
          example: 0
          description: Shipping fee subsidy funded by TikTok. A positive amount represents a shipping fee subsidy paid to the seller. A negative amount represents a shipping fee subsidy returned to TikTok by the seller.
        fee_amount:
          type: string
          example: -30
          description: The fees calculated by TikTok when the order is settled (the order is settled X days after it is delivered with no return/refund pending).
        platform_commission_amount:
          type: string
          example: 0
          description: Only for UK. Rate * (customer_payment_amount - customer_order_refund_amount + platform_discount_amount - platform_discount_refund_amount).
        customer_order_refund_amount:
          type: string
          example: 0
          description: The refunded amount deducted from the final settlement.
        actual_shipping_fee_amount:
          type: string
          example: -50
          description: The actual shipping fee calculated based on the weight/dimensions measured by the carrier.
        platform_shipping_fee_discount_amount:
          type: string
          example: 40
          description: The shipping fee discount funded by TikTok in accordance with campaign policy.
        sales_tax_amount:
          type: string
          example: -10
          description: Only for US. The final sales tax collected from the buyer for the product and delivery. sales_tax_amount = sales_tax_refund_amount-sales_tax_payment_amount.
        sales_tax_refund_amount:
          type: string
          example: 0
          description: Only for US. If the purchase is refunded, the sales tax that was applied will be returned to the buyer.
        affiliate_commission_amount:
          type: string
          example: -6
          description: The price the customer actually paid for the product (product sale price minus any platform coupons and merchant coupons) multiplied by the commission percentage.
        affiliate_partner_commission_amount:
          type: string
          example: 0
          description: The amount the customer paid for the product (product price minus platform and seller discounts) via affiliate partner's links multiplied by the affiliate partner commission rate.
        shipping_fee_amount:
          type: string
          example: -10
          description: shipping_fee_amount = actual_shipping_fee_amount - platform_shipping_fee_discount_amount + actual_return_shipping_fee_amount.
        referral_fee_amount:
          type: string
          example: -2
          description: Only for US. The referral fee is an amount charged for processing successful orders in TikTok Shop.
        adjustment_amount:
          type: string
          example: 170
          description: The final adjustment amount.
        actual_return_shipping_fee_amount:
          type: string
          example: 0
          description: If the seller is responsible for the return, the return shipping fee will be charged.
        transaction_fee_amount:
          type: string
          example: -2
          description: Only for US. Transaction Fee is a service fee charged for processing successful orders in TikTok Shop.
        retail_delivery_fee_amount:
          type: string
          example: -10
          description: retail_delivery_fee_amount = retail_delivery_fee_payment_amount + retail_delivery_fee_refund_amount.
        retail_delivery_fee_payment_amount:
          type: string
          example: -20
          description: The retail delivery fee is collected and remitted by the TikTok Shop. It applies to all deliveries by motor vehicle to a location in Colorado with at least one item of tangible personal property that is subject to state sales or use tax.
        retail_delivery_fee_refund_amount:
          type: string
          example: 10
          description: Subsidy paid by TikTok Shop for losses due to return or refund request rules or other issues.
        affiliate_commission_before_pit:
          type: string
          example: -7
          description: The commission paid to a creator before any personal income tax withholding.
        pit_amount:
          type: string
          example: 1
          description: The creator's personal income tax withholding amount. Sellers are required to handle the filing and remittance of withheld taxes based on their region's tax regulations.
        sku_statement_transactions:
          type: array
          items:
            $ref: '#/components/schemas/SKUStatementTransaction'
    SKUStatementTransaction:
      type: object
      properties:
        sku_id:
          type: string
          example: 1729383353063867953
          description: Transaction SKU ID.
        sku_name:
          type: string
          example: "Black 256G"
          description: SKU name.
        product_name:
          type: string
          example: "iPhone 14 Pro Max"
          description: Product name.
        quantity:
          type: integer
          example: 3
          description: Quantity.
        settlement_amount:
          type: string
          example: "170"
          description: settlement_amount = revenue_amount + fee_amount + adjustment_amount.
        currency:
          type: string
          example: "USD"
          description: The three-digit currency code in ISO 4217 format.
        revenue_amount:
          type: string
          example: "90"
          description: All revenue amount.
        customer_payment_amount:
          type: string
          example: "90"
          description: The total amount paid by the customer, customer_payment = after_seller_discounts_subtotal_amount+customer_shipping_fee_amount-platform_discount_amount+sales_tax_payment_amount.
        after_seller_discounts_subtotal_amount:
          type: string
          example: "90"
          description: The price of all order items after the seller's discount is deducted.
        customer_shipping_fee_amount:
          type: string
          example: "5"
          description: The expected shipping fee borne by the buyer calculated based on the weight of the product uploaded by the seller.
        sales_tax_payment_amount:
          type: string
          example: "5"
          description: Only for US. The sales tax collected from the buyer for the product and delivery.
        platform_discount_amount:
          type: string
          example: "10"
          description: This category represents promotions paid for by the platform, such as coupons and other campaign discounts organised by the platform.
        platform_discount_refund_amount:
          type: string
          example: "0"
          description: If a refund happens, the platform discount that was applied will be regarded as invalid and deducted from the final settlement.
        customer_order_refund_amount:
          type: string
          example: "0"
          description: The refunded amount deducted from the final settlement.
        customer_refund_amount:
          type: string
          example: "0"
          description: The exact amount refunded to the customer.
        platform_refund_subsidy_amount:
          type: string
          example: "0"
          description: The refunded amount subsidized by the platform.
        shipping_fee_subsidy_amount:
          type: string
          example: "0"
          description: A positive amount represents a shipping fee subsidy you've received and a negative amount represents a shipping fee subsidy you need to return.
        fee_amount:
          type: string
          example: "-15"
          description: The fees calculated by the platform when the order meets the settlement rules (the order is deemed to settle X days after it is delivered with no return/refund ongoing).
        platform_commission_amount:
          type: string
          example: "0"
          description: Only for UK. Rate * (customer_payment_amount - customer_order_refund_amount + platform_discount_amount - platform_discount_refund_amount).
        shipping_fee_amount:
          type: string
          example: "-5"
          description: shipping_fee_amount = actual_shipping_fee_amount - platform_shipping_fee_discount_amount + actual_return_shipping_fee_amount.
        actual_shipping_fee_amount:
          type: string
          example: "-20"
          description: The actual shipping fee calculated based on the weight/dimensions measured by the carrier.
        platform_shipping_fee_discount_amount:
          type: string
          example: "15"
          description: The shipping fee discount provided in accordance with a campaign policy.
        sales_tax_amount:
          type: string
          example: "-5"
          description: Only for US. The final sales tax collected from the buyer for the product and delivery. sales_tax_amount = sales_tax_refund_amount-sales_tax_payment_amount.
        sales_tax_refund_amount:
          type: string
          example: "0"
          description: Only for US. If the purchase is refunded, the sales tax that was applied will be returned to the buyer.
        affiliate_commission_amount:
          type: string
          example: "-3"
          description: The price the customer actually paid for the product (product sale price minus any platform coupons and merchant coupons) multiplied by the commission percentage.
        affiliate_partner_commission_amount:
          type: string
          example: "0"
          description: The amount the customer paid for the product (product price minus platform and seller discounts) via affiliate partner's links multiplied by the affiliate partner commission rate.
        transaction_fee_amount:
          type: string
          example: "-1"
          description: Only for US. Transaction Fee is a service fee charged for processing successful orders in TikTok Shop. Transaction Fee is a non-refundable fee, and is charged at 0.3USD plus a percentage of the customer paid price per transaction. (For orders placed before April 3, 2023, 0:00 AM UTC-04:00, New York Time)$0.3 + rate %* Customer payment.
        referral_fee_amount:
          type: string
          example: "-1"
          description: Only for US. The referral fee is an amount charged for processing successful orders in TikTok Shop. (For orders placed before April 3, 2023, 0:00 AM UTC-04:00, New York Time)$0.3 + rate %* (Customer payment + Platform discount - (Customer order refund + Platform discount refund)).
        adjustment_amount:
          type: string
          example: "85"
          description: The adjustment amount.
        actual_return_shipping_fee_amount:
          type: string
          example: "0"
          description: If the seller is responsible for the return, the return shipping fee will be charged.
        retail_delivery_fee_amount:
          type: string
          example: "-10"
          description: retail_delivery_fee_amount = retail_delivery_fee_payment_amount+retail_delivery_fee_refund_amount.
        retail_delivery_fee_payment_amount:
          type: string
          example: "-20"
          description: The retail delivery fee is collected and remitted by the TikTok Shop. It applies to all deliveries by motor vehicle to a location in Colorado with at least one item of tangible personal property that is subject to state sales or use tax.
        retail_delivery_fee_refund_amount:
          type: string
          example: "10"
          description: Subsidy paid by TikTok Shop for losses due to return or refund request rules or other issues.
        affiliate_commission_before_pit:
          type: string
          example: "-4"
          description: The commission paid to a creator before any personal income tax withholding.
        pit_amount:
          type: string
          example: "1"
          description: The creator's personal income tax withholding amount. Sellers are required to handle the filing and remittance of withheld taxes based on their region's tax regulations.
    StatementTransaction:
      type: object
      properties:
        id:
          type: string
          example: 1636700041413599290
        type:
          type: string
          enum: [ORDER, SHIPPING_FEE_ADJUSTMENT, SHIPPING_FEE_COMPENSATION, CHARGE_BACK, CUSTOMER_SERVICE_COMPENSATION, PROMOTION_ADJUSTMENT, PLATFORM_COMPENSATION, PLATFORM_PENALTY, SAMPLE_SHIPPING_FEE, LOGISTICS_REIMBURSEMENT, PLATFORM_REIMBURSEMENT, DEDUCTIONS_INCURRED_BY_SELLER, SHIPPING_FEE_REBATE, WAREHOUSE_SERVICE_FEE, PLATFORM_COMMISSION_ADJUSTMENT, PLATFORM_COMMISSION_COMPENSATION, OTHER_ADJUSTMENT]
        order_id:
          type: string
          example: 576463220456522968
        adjustment_id:
          type: string
          example: 7238804564097517332
        adjustment_order_id:
          type: string
          example: 576463220456522968
        order_create_time:
          type: integer
          example: 1685548800
        settlement_amount:
          type: string
          example: 130
        currency:
          type: string
          example: USD
        revenue_amount:
          type: string
          example: 200
        customer_payment_amount:
          type: string
          example: 180
        after_seller_discounts_subtotal_amount:
          type: string
          example: 180
        customer_shipping_fee_amount:
          type: string
          example: 10
        sales_tax_payment_amount:
          type: string
          example: 10
        platform_discount_amount:
          type: string
          example: 10
        platform_discount_refund_amount:
          type: string
          example: 20
        customer_order_refund_amount:
          type: string
          example: 0
        customer_refund_amount:
          type: string
          example: 0
        platform_refund_subsidy_amount:
          type: string
          example: 0
        shipping_fee_subsidy_amount:
          type: string
          example: 0
        fee_amount:
          type: string
          example: -30
        platform_commission_amount:
          type: string
          example: 0
        shipping_fee_amount:
          type: string
          example: -10
        actual_shipping_fee_amount:
          type: string
          example: -50
        platform_shipping_fee_discount_amount:
          type: string
          example: 40
        sales_tax_amount:
          type: string
          example: -10
        sales_tax_refund_amount:
          type: string
          example: 0
        affiliate_commission_amount:
          type: string
          example: -6
        affiliate_partner_commission_amount:
          type: string
          example: 0
        transaction_fee_amount:
          type: string
          example: -2
        referral_fee_amount:
          type: string
          example: -2
        adjustment_amount:
          type: string
          example: 170
        actual_return_shipping_fee_amount:
          type: string
          example: 0
        retail_delivery_fee_amount:
          type: string
          example: -10
        retail_delivery_fee_payment_amount:
          type: string
          example: -20
        retail_delivery_fee_refund_amount:
          type: string
          example: 10
        affiliate_commission_before_pit:
          type: string
          example: -7
        pit_amount:
          type: string
          example: 1
    Withdrawal:
      type: object
      properties:
        id:
          type: string
          example: EFASDFSAFDA23432DFAFDSA
        type:
          type: string
          enum: [WITHDRAW, SETTLE, TRANSFER, REVERSE]
          description: >
            Type of the withdrawal transaction.
        amount:
          type: string
          example: "100"
          description: Withdraw amount.
        currency:
          type: string
          example: IDR
          description: The three-digit currency code in ISO 4217 format.
        status:
          type: string
          enum: [PROCESSING, SUCCESS, FAILED]
          description: The processing status of the withdrawal indicates whether the withdrawal is transferred.
        create_time:
          type: integer
          example: 1623812664
          description: Withdraw create time.
    Statement:
      type: object
      properties:
        id:
          type: string
          example: 7238804564097517339
        statement_time:
          type: integer
          example: 1685548800
          description: This will return the statement date at 00:00 UTC time equivalent in Unix timestamp.
        settlement_amount:
          type: string
          example: "100"
          description: Settlement_amount = revenue_amount + fee_amount + adjustment_amount.
        currency:
          type: string
          example: GBP
          description: The three-digit currency code in ISO 4217 format.
        revenue_amount:
          type: string
          example: "200"
          description: The total earnings calculated by the platform at the time the order was paid.
        fee_amount:
          type: string
          example: "-30"
          description: The fees calculated by the platform when the order meets the settlement rules.
        adjustment_amount:
          type: string
          example: "-70"
          description: The total amount calculated by the platform when the order fees need to be changed.
        payment_status:
          type: string
          enum: [PAID, FAILED, PROCESSING]
          description: The processing status of the statement indicates whether the payment of the statement is settled.
        payment_id:
          type: string
          example: 3459275187040258849
          description: The unique ID of the payment.
    Payment:
      type: object
      properties:
        create_time:
          type: integer
          example: 1636105796
          description: The time that the payment was created within TikTokShop.
        id:
          type: string
          example: 3458767051733897992
          description: The unique ID of the payment.
        status:
          type: string
          enum: [PAID, FAILED, PROCESSING]
          description: The processing status of the payment indicates whether the payment is transferred.
        amount:
          type: object
          properties:
            value:
              type: string
              example: "100"
            currency:
              type: string
              example: GBP
          description: The actual payment information after exchange.
        settlement_amount:
          type: object
          properties:
            value:
              type: string
              example: "130"
            currency:
              type: string
              example: GBP
          description: The settlement information before exchange.
        reserve_amount:
          type: object
          properties:
            value:
              type: string
              example: "-30"
            currency:
              type: string
              example: GBP
          description: The reserve information before exchange.
        payment_amount_before_exchange:
          type: object
          properties:
            value:
              type: string
              example: "100"
            currency:
              type: string
              example: GBP
          description: The payment information before applying an exchange rate.
        exchange_rate:
          type: string
          example: "1.000000"
          description: The exchange rate, at 6 decimal places.
        paid_time:
          type: integer
          example: 1685548800
          description: UNIX timestamp when the payment was successfully processed.
        bank_account:
          type: string
          example: "***********1234"
          description: The Seller's bank account number masked, with only the last 4 digits revealed.
    Message:
      type: object
      properties:
        id:
          type: string
          example: 7494560109732334263
        type:
          type: string
          enum: [TEXT, IMAGE, ALLOCATED_SERVICE, NOTIFICATION, BUYER_ENTER_FROM_TRANSFER, BUYER_ENTER_FROM_PRODUCT, BUYER_ENTER_FROM_ORDER, PRODUCT_CARD, ORDER_CARD, EMOTICONS, VIDEO, OTHER]
        content:
          type: string
          example: '{"content": "simple text message"}'
        create_time:
          type: integer
          example: 1691411573
        is_visible:
          type: boolean
          example: true
        sender:
          type: object
          properties:
            im_user_id:
              type: string
              example: 7494560109732334261
            role:
              type: string
              enum: [BUYER, SHOP, CUSTOMER_SERVICE, SYSTEM, ROBOT]
            nickname:
              type: string
              example: Albert
            avatar:
              type: string
              example: https://p16-oec-ttp.tiktokcdn-us.com/tos-useast5-i-omjb5zjo8w-tx/566c497faaaf4491a84d3ce55d9cb095~tplv-omjb5zjo8w-origin-image.image?
    Conversation:
      type: object
      properties:
        id:
          type: string
          example: 7494560109732334261
        participant_count:
          type: integer
          example: 3
        can_send_message:
          type: boolean
          example: true
        unread_count:
          type: integer
          example: 0
        create_time:
          type: integer
          example: 1691411573
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
        latest_message:
          $ref: '#/components/schemas/ConversationMessage'
    Participant:
      type: object
      properties:
        im_user_id:
          type: string
          example: 7494560109732334261
        avatar:
          type: string
          example: https://p16-oec-ttp.tiktokcdn-us.com/tos-useast5-i-omjb5zjo8w-tx/566c497faaaf4491a84d3ce55d9cb095~tplv-omjb5zjo8w-origin-image.image?
        user_id:
          type: string
          example: 7494560109732334262
        role:
          type: string
          enum: [BUYER, SHOP, CUSTOMER_SERVICE]
        nickname:
          type: string
          example: Albert
    ConversationMessage:
      type: object
      properties:
        id:
          type: string
          example: 7494560109732334263
        type:
          type: string
          enum: [TEXT, IMAGE, ALLOCATED_SERVICE, NOTIFICATION, BUYER_ENTER_FROM_TRANSFER, BUYER_ENTER_FROM_PRODUCT, BUYER_ENTER_FROM_ORDER, PRODUCT_CARD, ORDER_CARD, EMOTICONS, VIDEO, OTHER]
        content:
          type: string
          example: '{"content": "simple text message"}'
        create_time:
          type: integer
          example: 1691411573
        is_visible:
          type: boolean
          example: true
        sender:
          $ref: '#/components/schemas/Participant'
    PackageShipmentDimension:
      type: object
      description: "Physical dimensions of the package."
      properties:
        length:
          type: integer
          description: "Length of the package."
          example: 34
        width:
          type: integer
          description: "Width of the package."
          example: 425
        height:
          type: integer
          description: "Height of the package."
          example: 42
        unit:
          type: string
          description: "Unit of measurement for the dimensions."
          enum:
            - METER
            - CENTIMETER
            - MILLIMETER
            - FOOT
            - MICRON
            - INCH
          example: "CENTIMETER"
    PackageShipmentWeight:
      type: object
      description: "Weight of the package."
      properties:
        value:
          type: integer
          description: "Weight value."
          example: 342
        unit:
          type: string
          description: "Unit of measurement for the weight."
          enum:
            - KILOGRAM
            - GRAM
            - MILLIGRAM
            - POUND
            - OUNCE
          example: "KILOGRAM"
    PackageShipmentSku:
      type: object
      description: "SKU information within the package."
      properties:
        id:
          type: string
          description: "SKU identifier."
          example: "4235346547"
        quantity:
          type: integer
          description: "Quantity of the SKU."
          example: 13
    PackageShipmentErrorDetail:
      type: object
      description: "Detail of an error for a package."
      properties:
        code:
          type: string
          description: "Error code."
          example: "39003015"
        message:
          type: string
          description: "Error message."
          example: "Provider is not supported by TikTok Shop"
        detail:
          type: object
          properties:
            package_id:
              type: string
              description: "Identifier of the package that encountered the error."
              example: "4645645645"
